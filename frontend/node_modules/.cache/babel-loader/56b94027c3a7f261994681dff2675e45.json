{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx\";\nimport React from 'react';\nimport TodosContainer from \"./components/todos-container/todos-container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // const [tasks, setTasks] = useState<ITask[]>([])\n  //\n  //   const fetchTask = async (): Promise<ITask[] | void> => {\n  //       try {\n  //           const response: any = await new TaskApi().getAllTasks()\n  //           setTasks(response)\n  //           console.log(response)\n  //       } catch (e) {\n  //           console.log('qwe', e)\n  //       }\n  //   }\n  //\n  // useEffect(() => {\n  //     fetchTask()\n  // }, [])\n  //\n  //   //todo handler for new todo\n  //   const newTaskHandler = (newTask: ITask) => {\n  //     setTasks([newTask, ...tasks])\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodosContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx"],"names":["React","TodosContainer","App"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAGA,OAAOC,cAAP,MAA2B,8CAA3B;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA,2BAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9BD;;KAAMA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {ITask} from \"./components/interface/interface\";\nimport TodoForm from \"./components/todo-form/todo-form\";\nimport TodosContainer from \"./components/todos-container/todos-container\";\nimport TaskApi from \"./components/TaskApi/TaskApi\";\n\n\nconst App = () => {\n\n  // const [tasks, setTasks] = useState<ITask[]>([])\n  //\n  //   const fetchTask = async (): Promise<ITask[] | void> => {\n  //       try {\n  //           const response: any = await new TaskApi().getAllTasks()\n  //           setTasks(response)\n  //           console.log(response)\n  //       } catch (e) {\n  //           console.log('qwe', e)\n  //       }\n  //   }\n  //\n  // useEffect(() => {\n  //     fetchTask()\n  // }, [])\n  //\n  //   //todo handler for new todo\n  //   const newTaskHandler = (newTask: ITask) => {\n  //     setTasks([newTask, ...tasks])\n  //   }\n\n  return (\n    <div>\n        {/*<TodoForm newTaskHandler={newTaskHandler}/>*/}\n      <TodosContainer/>\n    </div>\n\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}