{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container';\nimport { TodosComponent } from \"./todos-component\"; //todo not default\n\nimport TodoForm from \"../todo-form/todo-form\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodosContainer = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const fetchTodos = async () => {\n    try {\n      //todo tipisation utility types\n      const todos = await new TodoService().getAllTodos();\n      setTodos(todos);\n      console.log(todos);\n    } catch (e) {\n      //todo\n      console.log('qwe', e);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const newTaskHandler = newTask => {\n    setTodos([newTask, ...todos]);\n  };\n\n  const deleteTodo = async id => {\n    try {\n      //todo naming, type\n      const response = await new TodoService().deleteTodo(id); //todo filter\n\n      todos.map((todo, index) => {\n        if (todo._id === response._id) {\n          const newArr = [...todos.slice(response)];\n          newArr.splice(index, 1);\n          setTodos(newArr);\n        }\n      });\n      console.log(response);\n    } catch (e) {\n      //todo\n      console.log('Error on DELETE query', e);\n    }\n  }; //todo type\n\n\n  const btnTodoRemove = e => {\n    e.preventDefault();\n    const id = e.target.id; //todo async operation\n\n    deleteTodo(id);\n    console.log(id);\n  }; //todo get todo id instead of event\n\n\n  const btnEditTodo = e => {\n    e.preventDefault();\n    const id = e.target.id;\n    todos.forEach(todo => {\n      if (todo._id === id) {\n        const value = todo.title;\n        console.log(id, value);\n        prevTodoValue(id, value);\n      }\n    });\n  };\n\n  const prevTodoValue = (id, value) => {\n    const body = {\n      _id: id,\n      title: value\n    };\n    console.log(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      newTaskHandler: newTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodosComponent, {\n      todos: todos,\n      btnTodoRemove: btnTodoRemove,\n      btnEditTodo: btnEditTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupContainer, {\n      prevTodoValue: prevTodoValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosContainer, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TodosContainer;\nexport default TodosContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx"],"names":["React","useEffect","useState","TodoService","PopupContainer","TodosComponent","TodoForm","TodosContainer","todos","setTodos","fetchTodos","getAllTodos","console","log","e","newTaskHandler","newTask","deleteTodo","id","response","map","todo","index","_id","newArr","slice","splice","btnTodoRemove","preventDefault","target","btnEditTodo","forEach","value","title","prevTodoValue","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container'\nimport { TodosComponent } from \"./todos-component\";\n//todo not default\nimport TodoForm from \"../todo-form/todo-form\";\nimport { ITask } from \"../../models/interface/interface\";\nimport './style.css'\n\nconst TodosContainer = (): JSX.Element => {\n    const [todos, setTodos] = useState<ITask[]>([])\n\n    const fetchTodos = async (): Promise<ITask[] | void> => {\n        try {\n            //todo tipisation utility types\n            const todos: any = await new TodoService().getAllTodos()\n            setTodos(todos)\n            console.log(todos)\n        } catch (e) {\n            //todo\n            console.log('qwe', e)\n        }\n    }\n\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    const newTaskHandler = (newTask: ITask) => {\n        setTodos([newTask, ...todos])\n    }\n\n    const deleteTodo = async (id: string): Promise<ITask | void> => {\n        try {\n            //todo naming, type\n            const response: any = await new TodoService().deleteTodo(id)\n\n            //todo filter\n            todos.map((todo, index) => {\n                if(todo._id === response._id) {\n                    const newArr = [...todos.slice(response)]\n                    newArr.splice(index, 1)\n                    setTodos(newArr)\n                }\n            })\n            console.log(response)\n        } catch (e) {\n            //todo\n            console.log('Error on DELETE query', e)\n        }\n    }\n\n    //todo type\n    const btnTodoRemove = (e: any) => {\n        e.preventDefault()\n        const id = e.target.id\n        //todo async operation\n        deleteTodo(id)\n        console.log(id)\n    }\n\n\n    //todo get todo id instead of event\n    const btnEditTodo = (e: any) => {\n        e.preventDefault()\n        const id = e.target.id\n        todos.forEach(todo => {\n            if (todo._id === id) {\n                const value = todo.title\n                console.log(id, value)\n                prevTodoValue(id, value)\n            }\n        })\n    }\n\n    const prevTodoValue = (id: string, value: string) => {\n        const body = {\n            _id: id,\n            title: value\n        }\n        console.log(body)\n    }\n\n    return (\n        <>\n            <TodoForm newTaskHandler={newTaskHandler} />\n            <TodosComponent todos={todos} btnTodoRemove={btnTodoRemove} btnEditTodo={btnEditTodo}/>\n            <PopupContainer prevTodoValue={prevTodoValue} />\n        </>\n    )\n}\n\nexport default TodosContainer"]},"metadata":{},"sourceType":"module"}