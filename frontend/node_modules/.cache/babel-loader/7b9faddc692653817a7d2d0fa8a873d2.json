{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-edit-popup/popup-container.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { PopupComponent } from \"./popup-component\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PopupContainer = _ref => {\n  _s();\n\n  let {\n    prevValue,\n    indexTodoChanged,\n    changeTodoHandler\n  } = _ref;\n  const [editTitle, setEditTitle] = useState('');\n\n  const changeTodo = async (body, id) => {\n    const updatedTodo = await TodoService.updateTodo(body, id);\n    console.log(updatedTodo);\n  };\n\n  const popupInputHandler = e => {\n    const value = e.target.value;\n    setEditTitle(value);\n  };\n\n  const popupBtnHandler = e => {\n    e.preventDefault();\n    const id = indexTodoChanged;\n    const body = {\n      _id: id,\n      title: editTitle\n    };\n    console.log(id, body);\n    changeTodo(body, id);\n    changeTodoHandler(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PopupComponent, {\n      popupBtnHandler: popupBtnHandler,\n      popupInputHandler: popupInputHandler,\n      prevValue: prevValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PopupContainer, \"4JcbOnqa3wv5MgMZyPyldWIj+7A=\");\n\n_c = PopupContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-edit-popup/popup-container.tsx"],"names":["useState","PopupComponent","TodoService","PopupContainer","prevValue","indexTodoChanged","changeTodoHandler","editTitle","setEditTitle","changeTodo","body","id","updatedTodo","updateTodo","console","log","popupInputHandler","e","value","target","popupBtnHandler","preventDefault","_id","title"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;;;AAUA,OAAO,MAAMC,cAAc,GAAG,QAAuF;AAAA;;AAAA,MAAtF;AAACC,IAAAA,SAAD;AAAYC,IAAAA,gBAAZ;AAA8BC,IAAAA;AAA9B,GAAsF;AAEjH,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMS,UAAU,GAAG,OAAOC,IAAP,EAAoBC,EAApB,KAAmC;AAClD,UAAMC,WAAkB,GAAG,MAAMV,WAAW,CAACW,UAAZ,CAAuBH,IAAvB,EAA6BC,EAA7B,CAAjC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH,GAHD;;AAKA,QAAMI,iBAAiB,GAAIC,CAAD,IAAY;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACAV,IAAAA,YAAY,CAACU,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAME,eAAe,GAAIH,CAAD,IAAY;AAChCA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMV,EAAE,GAAGN,gBAAX;AACA,UAAMK,IAAW,GAAG;AAChBY,MAAAA,GAAG,EAAEX,EADW;AAEhBY,MAAAA,KAAK,EAAEhB;AAFS,KAApB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ,EAAgBD,IAAhB;AACAD,IAAAA,UAAU,CAACC,IAAD,EAAOC,EAAP,CAAV;AACAL,IAAAA,iBAAiB,CAACI,IAAD,CAAjB;AACH,GAVD;;AAYA,sBACI;AAAA,2BACA,QAAC,cAAD;AACI,MAAA,eAAe,EAAEU,eADrB;AAEI,MAAA,iBAAiB,EAAEJ,iBAFvB;AAGI,MAAA,SAAS,EAAEZ;AAHf;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAUH,CApCM;;GAAMD,c;;KAAAA,c","sourcesContent":["import { useState } from \"react\";\nimport { PopupComponent } from \"./popup-component\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { ITask } from \"../../models/interface/interface\";\n\ninterface PopupContainerProp {\n    prevTodoValue: (id: string, body: string) => void\n    changeTodoHandler: (changeTask: ITask) => void\n    prevValue: string\n    indexTodoChanged: string\n}\n\nexport const PopupContainer = ({prevValue, indexTodoChanged, changeTodoHandler}: PopupContainerProp): JSX.Element => {\n\n    const [editTitle, setEditTitle] = useState('')\n\n    const changeTodo = async (body: ITask, id: string) => {\n        const updatedTodo: ITask = await TodoService.updateTodo(body, id)\n        console.log(updatedTodo)\n    }\n\n    const popupInputHandler = (e: any) => {\n        const value = e.target.value\n        setEditTitle(value)\n    }\n\n    const popupBtnHandler = (e: any) => {\n        e.preventDefault()\n        const id = indexTodoChanged\n        const body: ITask = {\n            _id: id,\n            title: editTitle\n        }\n        console.log(id, body)\n        changeTodo(body, id)\n        changeTodoHandler(body)\n    }\n\n    return (\n        <>\n        <PopupComponent\n            popupBtnHandler={popupBtnHandler}\n            popupInputHandler={popupInputHandler}\n            prevValue={prevValue}\n\n        />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}