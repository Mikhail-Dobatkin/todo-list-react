{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/main-container/main-container.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport TodosContainer from \"../todos-container/todos-container\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainContainer = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [prevValueTitle, setTodoTitlePrev] = useState('');\n  const [indexTodoChanged, setTodoId] = useState('');\n\n  const fetchTodos = async () => {\n    try {\n      //todo typisation utility types\n      const getTodos = await TodoService.getAllTodos();\n      console.log(getTodos);\n      setTodos(getTodos);\n    } catch (e) {\n      console.log('Error in fetchTodos', e);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TodosContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MainContainer, \"CFPY0ydi8OnZCpnO7pqPCFc+JIo=\");\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/main-container/main-container.tsx"],"names":["useEffect","useState","TodosContainer","TodoService","MainContainer","todos","setTodos","prevValueTitle","setTodoTitlePrev","indexTodoChanged","setTodoId","fetchTodos","getTodos","getAllTodos","console","log","e"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAmB;AAAA;;AAE5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAU,EAAV,CAAlC;AAEA,QAAM,CAACM,cAAD,EAAiBC,gBAAjB,IAAqCP,QAAQ,CAAS,EAAT,CAAnD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,SAAnB,IAAgCT,QAAQ,CAAS,EAAT,CAA9C;;AAEA,QAAMU,UAAU,GAAG,YAA2B;AAC1C,QAAI;AACA;AACA,YAAMC,QAAa,GAAG,MAAMT,WAAW,CAACU,WAAZ,EAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAN,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,KALD,CAKE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,CAAnC;AACH;AACJ,GATD;;AAWAhB,EAAAA,SAAS,CAAE,MAAM;AACbW,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA3BM;;GAAMP,a;;KAAAA,a","sourcesContent":["import {useEffect, useState} from \"react\";\nimport TodosContainer from \"../todos-container/todos-container\";\nimport {ITask} from \"../../models/interface/interface\";\nimport TodoService from \"../../service/todoService/TodoService\";\n\nexport const MainContainer = (): JSX.Element => {\n\n    const [todos, setTodos] = useState<ITask[]>([])\n\n    const [prevValueTitle, setTodoTitlePrev] = useState<string>('')\n    const [indexTodoChanged, setTodoId] = useState<string>('')\n\n    const fetchTodos = async (): Promise<void> => {\n        try {\n            //todo typisation utility types\n            const getTodos: any = await TodoService.getAllTodos()\n            console.log(getTodos)\n            setTodos(getTodos)\n        } catch (e) {\n            console.log('Error in fetchTodos', e)\n        }\n    }\n\n    useEffect( () => {\n        fetchTodos()\n    }, [])\n    \n    return (\n        <>\n            <TodosContainer />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}