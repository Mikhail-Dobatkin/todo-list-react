{"ast":null,"code":"import { TodoActionTypes } from '../types/typesTodo';\nimport { store } from '../index';\nexport const getTodos = () => {\n  var _store$getState$books;\n\n  const todos = (_store$getState$books = store.getState().books) === null || _store$getState$books === void 0 ? void 0 : _store$getState$books.books;\n  return {\n    type: TodoActionTypes.FETCH_TODOS_SUCCESS,\n    payload: todos\n  };\n};\nexport const createTodo = todo => {\n  return {\n    type: TodoActionTypes.CREATE_TODO_SUCCESS,\n    todo\n  };\n};\nexport const deleteTodo = todo => {\n  return {\n    type: TodoActionTypes.DELETE_TODO_SUCCESS,\n    payload: todo\n  };\n};\nexport const changeTodo = todo => {\n  return {\n    type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS,\n    payload: todo\n  };\n};","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/store/action-creators/action.ts"],"names":["TodoActionTypes","store","getTodos","todos","getState","books","type","FETCH_TODOS_SUCCESS","payload","createTodo","todo","CREATE_TODO_SUCCESS","deleteTodo","DELETE_TODO_SUCCESS","changeTodo","CHANGE_TODO_STATE_SUCCESS"],"mappings":"AAAA,SAAqBA,eAArB,QAA4C,oBAA5C;AAGA,SAASC,KAAT,QAAsB,UAAtB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,KAA0B,4BAAGF,KAAK,CAACG,QAAN,GAAiBC,KAApB,0DAAG,sBAAwBA,KAA3D;AACA,SAAQ;AAAEC,IAAAA,IAAI,EAAEN,eAAe,CAACO,mBAAxB;AAA6CC,IAAAA,OAAO,EAAEL;AAAtD,GAAR;AACD,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAIC,IAAD,IAAiB;AACzC,SAAQ;AAAEJ,IAAAA,IAAI,EAAEN,eAAe,CAACW,mBAAxB;AAA6CD,IAAAA;AAA7C,GAAR;AACD,CAFM;AAGP,OAAO,MAAME,UAAU,GAAIF,IAAD,IAAiB;AACzC,SAAQ;AAAEJ,IAAAA,IAAI,EAAEN,eAAe,CAACa,mBAAxB;AAA6CL,IAAAA,OAAO,EAAEE;AAAtD,GAAR;AACD,CAFM;AAGP,OAAO,MAAMI,UAAU,GAAIJ,IAAD,IAAiB;AACzC,SAAQ;AAAEJ,IAAAA,IAAI,EAAEN,eAAe,CAACe,yBAAxB;AAAmDP,IAAAA,OAAO,EAAEE;AAA5D,GAAR;AACD,CAFM","sourcesContent":["import { TodoAction, TodoActionTypes } from '../types/typesTodo'\nimport { Dispatch } from 'redux'\nimport { ITodo } from '../../models/interface/interface'\nimport { store } from '../index'\n\nexport const getTodos = () => {\n  const todos: ITodo[] | undefined = store.getState().books?.books\n  return ({ type: TodoActionTypes.FETCH_TODOS_SUCCESS, payload: todos })\n}\n\nexport const createTodo = (todo: ITodo) => {\n  return ({ type: TodoActionTypes.CREATE_TODO_SUCCESS, todo })\n}\nexport const deleteTodo = (todo: ITodo) => {\n  return ({ type: TodoActionTypes.DELETE_TODO_SUCCESS, payload: todo })\n}\nexport const changeTodo = (todo: ITodo) => {\n  return ({ type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS, payload: todo })\n}\n"]},"metadata":{},"sourceType":"module"}