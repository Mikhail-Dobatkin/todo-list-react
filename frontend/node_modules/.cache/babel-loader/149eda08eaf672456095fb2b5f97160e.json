{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/components/todo-form/todo-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './style.css';\nimport TodoService from \"../../service/todoService/TodoService\";\nimport TodoFormComponent from \"./todo-form-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = _ref => {\n  _s();\n\n  let {\n    newTaskHandler\n  } = _ref;\n  const [input, setInput] = useState('');\n\n  const createTask = async body => {\n    try {\n      const task = await new TodoService().createNewTask(body);\n      console.log(task); //todo call handler here\n\n      newTaskHandler(task);\n    } catch (e) {\n      console.log('Error on POST query', e);\n    }\n  };\n\n  const changeHandler = e => {\n    const value = e.target.value;\n    setInput(value);\n  };\n\n  const clickHandler = e => {\n    e.preventDefault();\n    const body = {\n      title: input,\n      isCheck: false\n    };\n    createTask(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoFormComponent, {\n    changeHandler: changeHandler,\n    clickHandler: clickHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TodoForm, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/components/todo-form/todo-form.tsx"],"names":["React","useState","TodoService","TodoFormComponent","TodoForm","newTaskHandler","input","setInput","createTask","body","task","createNewTask","console","log","e","changeHandler","value","target","clickHandler","preventDefault","title","isCheck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,aAAP;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;;;AAMA,MAAMC,QAAyB,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAACC,IAAAA;AAAD,GAAqB;AAEpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,UAAU,GAAG,MAAOC,IAAP,IAAuB;AAEtC,QAAI;AACA,YAAMC,IAAW,GAAG,MAAM,IAAIR,WAAJ,GAAkBS,aAAlB,CAAgCF,IAAhC,CAA1B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAFA,CAGA;;AACAL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACH,KALD,CAKE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,CAAnC;AACH;AACJ,GAVD;;AAYA,QAAMC,aAAa,GAAID,CAAD,IAA4C;AAC9D,UAAME,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AACAT,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACH,GAHD;;AAKA,QAAME,YAAY,GAAIJ,CAAD,IAA4C;AAC7DA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMV,IAAW,GAAG;AAEhBW,MAAAA,KAAK,EAAEd,KAFS;AAGhBe,MAAAA,OAAO,EAAE;AAHO,KAApB;AAKAb,IAAAA,UAAU,CAACC,IAAD,CAAV;AACH,GARD;;AAWA,sBACK,QAAC,iBAAD;AACG,IAAA,aAAa,EAAEM,aADlB;AAEG,IAAA,YAAY,EAAEG;AAFjB;AAAA;AAAA;AAAA;AAAA,UADL;AAMH,CAtCD;;GAAMd,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, {FC, useState} from \"react\";\nimport './style.css'\nimport {ITask} from \"../../models/interface/interface\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport TodoFormComponent from \"./todo-form-component\";\n\ninterface TaskAddProp {\n    newTaskHandler: (task: ITask) => void\n}\n\nconst TodoForm: FC<TaskAddProp> = ({newTaskHandler}) => {\n\n    const [input, setInput] = useState('')\n\n    const createTask = async (body: ITask) => {\n\n        try {\n            const task: ITask = await new TodoService().createNewTask(body)\n            console.log(task)\n            //todo call handler here\n            newTaskHandler(task)\n        } catch (e) {\n            console.log('Error on POST query', e)\n        }\n    }\n\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value\n        setInput(value)\n    }\n\n    const clickHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault()\n        const body: ITask = {\n\n            title: input,\n            isCheck: false\n        }\n        createTask(body)\n    }\n\n\n    return (\n         <TodoFormComponent\n            changeHandler={changeHandler}\n            clickHandler={clickHandler}\n         />\n    )\n}\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}