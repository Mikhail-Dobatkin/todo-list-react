{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container';\nimport { TodosComponent } from \"./todos-component\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodosContainer = _ref => {\n  _s();\n\n  let {\n    todos,\n    setTodos\n  } = _ref;\n  const [changedTodo, setChangedTodos] = useState([]);\n\n  const EditTodo = (title, id) => {};\n\n  const changeTodoHandler = changeTodo => {\n    const {\n      _id\n    } = changeTodo;\n    console.log(changeTodo.id);\n    todos.map(todo => {\n      if (changeTodo.id === todo._id) {\n        return todo.isCheck = !todo.isCheck; // const prevArr = todos.splice(index, 1, changeTodo)\n        // const arr = [...todos] //arr\n        // setTodos(arr)\n        // console.log(arr)\n      } else {\n        console.log('Problem in function changeTodoHandler', _id, todo._id);\n      }\n    });\n    setTodos([...todos]);\n  };\n\n  const toggleIsCheck = async body => {\n    try {\n      const updatedTodo = await TodoService.updateTodo(body);\n      changeTodoHandler(body);\n    } catch (e) {\n      console.log('Error in toggleIsCheck function', e);\n    }\n  };\n\n  const todoIsCheck = async todo => {\n    const {\n      _id,\n      title,\n      isCheck\n    } = todo;\n    console.log(todo);\n    const body = {\n      id: _id,\n      title,\n      isCheck: !isCheck\n    };\n    console.log('I AM BODY', body);\n    console.log(body, todos);\n\n    try {\n      const response = await toggleIsCheck(body);\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const changeCheck = body => {\n    console.log(body);\n  };\n\n  const deleteTodo = async id => {\n    try {\n      const todo = await TodoService.deleteTodo(id);\n      const newArrTodos = todos.filter(task => {\n        return task._id !== todo._id;\n      });\n      setTodos(newArrTodos);\n    } catch (e) {\n      console.log('Error in function deleteTodo', e);\n    }\n  };\n\n  const TodoRemove = async id => {\n    try {\n      await deleteTodo(id);\n    } catch (e) {\n      console.log('Error in function deleteTodo', e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodosComponent, {\n      todos: todos,\n      TodoRemove: TodoRemove,\n      EditTodo: EditTodo,\n      todoIsCheck: todoIsCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupContainer, {\n      changeTodoHandler: changeTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosContainer, \"/iEtoQW0sWGbg7OqV0755urs9Y4=\");\n\n_c = TodosContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx"],"names":["React","useState","TodoService","PopupContainer","TodosComponent","TodosContainer","todos","setTodos","changedTodo","setChangedTodos","EditTodo","title","id","changeTodoHandler","changeTodo","_id","console","log","map","todo","isCheck","toggleIsCheck","body","updatedTodo","updateTodo","e","todoIsCheck","response","changeCheck","deleteTodo","newArrTodos","filter","task","TodoRemove"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container';\nimport { TodosComponent } from \"./todos-component\";\nimport { ITask } from \"../../models/interface/interface\";\nimport './style.css';\n\ninterface TodosContainerProp {\n    fetchTodos: () => void\n    todos: ITask[]\n    setTodos: (body: ITask[]) => void\n}\n\nexport const TodosContainer = ({todos, setTodos}: TodosContainerProp): JSX.Element => {\n\n    const [changedTodo, setChangedTodos] = useState<ITask[]>([])\n\n    const EditTodo = (title: ITask[\"title\"], id: ITask[\"_id\"]) => {\n\n    }\n\n    const changeTodoHandler = (changeTodo: any) => {\n        const {_id} = changeTodo\n        console.log(changeTodo.id)\n         todos.map((todo: ITask) => {\n            if(changeTodo.id === todo._id) {\n                return todo.isCheck = !todo.isCheck\n                // const prevArr = todos.splice(index, 1, changeTodo)\n                // const arr = [...todos] //arr\n                // setTodos(arr)\n                // console.log(arr)\n            } else {\n                console.log('Problem in function changeTodoHandler', _id, todo._id)\n            }\n        })\n        setTodos([...todos])\n    }\n\n    const toggleIsCheck = async (body: ITask): Promise<void> => {\n        try {\n            const updatedTodo = await TodoService.updateTodo(body)\n             changeTodoHandler(body)\n        } catch (e) {\n            console.log('Error in toggleIsCheck function', e)\n        }\n    };\n\n    const todoIsCheck = async (todo: ITask) => {\n        const {_id, title, isCheck} = todo\n        console.log(todo)\n        const body = {\n            id: _id,\n            title,\n            isCheck: !isCheck\n        }\n        console.log('I AM BODY', body)\n        console.log(body, todos)\n\n        try {\n             const response = await toggleIsCheck(body)\n            console.log(response)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const changeCheck = (body: ITask) => {\n        console.log(body)\n    }\n\n    const deleteTodo = async (id: ITask[\"_id\"]): Promise<ITask | void> => {\n        try {\n            const todo: ITask = await TodoService.deleteTodo(id)\n            const newArrTodos = todos.filter(task => {\n                return task._id !== todo._id\n            })\n            setTodos(newArrTodos)\n        } catch (e) {\n            console.log('Error in function deleteTodo', e)\n        }\n    }\n    const TodoRemove = async (id: ITask[\"_id\"]) => {\n        try {\n            await deleteTodo(id)\n        } catch (e) {\n            console.log('Error in function deleteTodo', e)\n        }\n    }\n\n    return (\n        <>\n            <TodosComponent todos={todos} TodoRemove={TodoRemove} EditTodo={EditTodo} todoIsCheck={todoIsCheck} />\n            <PopupContainer changeTodoHandler={changeTodoHandler} />\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}