{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport httpQuery from \"./components/httpQuery/httpQuery\";\nimport TasksContainer from \"./components/tasks-container/tasks-container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTask] = useState([]);\n  useEffect(() => {\n    async function fetchTask() {\n      const response = await getAllTasks();\n      console.log(response);\n    }\n\n    fetchTask();\n  }, []);\n\n  async function getAllTasks() {\n    try {\n      const response = await httpQuery.get('/allTasks');\n      setTask(response.data);\n    } catch (e) {\n      console.log('I`M Error on GET query!', e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TasksContainer, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Oalh7gGRly8nmy9ApEFAxF9qmMk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx"],"names":["React","useEffect","useState","httpQuery","TasksContainer","App","tasks","setTask","fetchTask","response","getAllTasks","console","log","get","data","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAAU,EAAV,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEb,mBAAeO,SAAf,GAA4B;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,WAAW,EAAlC;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACF;;AACDD,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;;AASA,iBAAeE,WAAf,GAAuD;AACrD,QAAI;AACF,YAAMD,QAAQ,GAAG,MAAMN,SAAS,CAACU,GAAV,CAAuB,WAAvB,CAAvB;AACAN,MAAAA,OAAO,CAACE,QAAQ,CAACK,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,CAAvC;AACD;AACF;;AACD,sBACE;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1BD;;GAAMD,G;;KAAAA,G;AA2BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {ITask} from \"./components/interface/interface\";\nimport httpQuery from \"./components/httpQuery/httpQuery\";\nimport TasksContainer from \"./components/tasks-container/tasks-container\";\n\nconst App = () => {\n  const [tasks, setTask] = useState<ITask[]>([])\n\n  useEffect(() => {\n\n     async function fetchTask () {\n      const response = await getAllTasks()\n       console.log(response)\n    }\n    fetchTask()\n  }, [])\n\n  async function getAllTasks(): Promise<ITask[] | void>  {\n    try {\n      const response = await httpQuery.get<ITask[]>('/allTasks')\n      setTask(response.data)\n    } catch (e) {\n      console.log('I`M Error on GET query!', e)\n    }\n  }\n  return (\n    <div>\n      <TasksContainer tasks={tasks} />\n    </div>\n\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}