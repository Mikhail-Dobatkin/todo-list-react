{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { TodoActionTypes } from '../types/typesTodo';\nimport { useDispatch } from 'react-redux';\nconst dispatch = useDispatch();\n\nconst fetchTodos = () => {\n  return dispatch({\n    type: TodoActionTypes.FETCH_TODOS_SUCCESS,\n    payload: []\n  });\n};\n\nconst createTodo = todo => {\n  _s();\n\n  const dispatch = useDispatch();\n  return dispatch({\n    type: TodoActionTypes.CREATE_TODO_SUCCESS,\n    payload: todo\n  });\n};\n\n_s(createTodo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nconst deleteTask = todo => {\n  return {\n    type: TodoActionTypes.DELETE_TODO_SUCCESS,\n    payload: todo\n  };\n};\n\nconst changeTodo = todo => {\n  return {\n    type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS,\n    payload: todo\n  };\n};","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/store/action-creators/action.ts"],"names":["TodoActionTypes","useDispatch","dispatch","fetchTodos","type","FETCH_TODOS_SUCCESS","payload","createTodo","todo","CREATE_TODO_SUCCESS","deleteTask","DELETE_TODO_SUCCESS","changeTodo","CHANGE_TODO_STATE_SUCCESS"],"mappings":";;AAAA,SAAqBA,eAArB,QAA4C,oBAA5C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,QAAQ,GAAGD,WAAW,EAA5B;;AAEA,MAAME,UAAU,GAAG,MAAM;AACvB,SAAQD,QAAQ,CAAE;AAAEE,IAAAA,IAAI,EAAEJ,eAAe,CAACK,mBAAxB;AAA6CC,IAAAA,OAAO,EAAE;AAAtD,GAAF,CAAhB;AACD,CAFD;;AAIA,MAAMC,UAAU,GAAIC,IAAD,IAAiB;AAAA;;AAClC,QAAMN,QAAQ,GAAGD,WAAW,EAA5B;AACA,SAAOC,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEJ,eAAe,CAACS,mBAAxB;AAA6CH,IAAAA,OAAO,EAAEE;AAAtD,GAAD,CAAf;AACD,CAHD;;GAAMD,U;UACaN,W;;;AAGnB,MAAMS,UAAU,GAAIF,IAAD,IAAwB;AACzC,SAAQ;AAAEJ,IAAAA,IAAI,EAAEJ,eAAe,CAACW,mBAAxB;AAA6CL,IAAAA,OAAO,EAAEE;AAAtD,GAAR;AACD,CAFD;;AAGA,MAAMI,UAAU,GAAIJ,IAAD,IAAiB;AAClC,SAAQ;AAAEJ,IAAAA,IAAI,EAAEJ,eAAe,CAACa,yBAAxB;AAAmDP,IAAAA,OAAO,EAAEE;AAA5D,GAAR;AACD,CAFD","sourcesContent":["import { TodoAction, TodoActionTypes } from '../types/typesTodo'\nimport { ITodo } from '../../models/interface/interface'\nimport { useDispatch } from 'react-redux'\n\nconst dispatch = useDispatch()\n\nconst fetchTodos = () => {\n  return (dispatch(({ type: TodoActionTypes.FETCH_TODOS_SUCCESS, payload: [] })))\n}\n\nconst createTodo = (todo: ITodo) => {\n  const dispatch = useDispatch()\n  return dispatch({ type: TodoActionTypes.CREATE_TODO_SUCCESS, payload: todo })\n}\nconst deleteTask = (todo: ITodo['_id']) => {\n  return ({ type: TodoActionTypes.DELETE_TODO_SUCCESS, payload: todo })\n}\nconst changeTodo = (todo: ITodo) => {\n  return ({ type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS, payload: todo })\n}\n"]},"metadata":{},"sourceType":"module"}