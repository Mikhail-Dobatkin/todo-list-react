{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx\";\nimport React from 'react';\nimport TodoService from '../../service/todoService/TodoService';\nimport { TodosComponent } from './todos-component';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// eslint-disable-next-line no-undef\nexport const TodosContainer = _ref => {\n  let {\n    todos,\n    setTodos\n  } = _ref;\n\n  const changeTodoState = changedTodo => {\n    todos.map(todo => {\n      if (changedTodo.id === todo._id) {\n        todo.isCheck = !todo.isCheck;\n        return todo;\n      }\n    });\n    setTodos([...todos]);\n  };\n\n  const toggleIsCheck = async todo => {\n    try {\n      const {\n        _id,\n        title,\n        isCheck\n      } = todo;\n      const body = {\n        id: _id,\n        title,\n        isCheck: !isCheck\n      };\n      await TodoService.updateTodo(body);\n      changeTodoState(body);\n    } catch (e) {\n      console.log('Error in toggleIsCheck function', e);\n    }\n  };\n\n  const deleteTodo = async id => {\n    try {\n      const todo = await TodoService.deleteTodo(id);\n      const newArrTodos = todos.filter(task => {\n        return task._id !== todo._id;\n      });\n      setTodos(newArrTodos);\n    } catch (e) {\n      console.log('Error in function deleteTodo', e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodosComponent, {\n    todos: todos,\n    deleteTodo: deleteTodo,\n    toggleIsCheck: toggleIsCheck\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = TodosContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx"],"names":["React","TodoService","TodosComponent","TodosContainer","todos","setTodos","changeTodoState","changedTodo","map","todo","id","_id","isCheck","toggleIsCheck","title","body","updateTodo","e","console","log","deleteTodo","newArrTodos","filter","task"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,aAAP;;AAQA;AACA,OAAO,MAAMC,cAAc,GAAG,QAA0D;AAAA,MAAzD;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAyD;;AACtF,QAAMC,eAAe,GAAIC,WAAD,IAAsB;AAC5CH,IAAAA,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAiB;AACzB,UAAIF,WAAW,CAACG,EAAZ,KAAmBD,IAAI,CAACE,GAA5B,EAAiC;AAC/BF,QAAAA,IAAI,CAACG,OAAL,GAAe,CAACH,IAAI,CAACG,OAArB;AACA,eAAOH,IAAP;AACD;AACF,KALD;AAMAJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACD,GARD;;AAUA,QAAMS,aAAa,GAAG,MAAOJ,IAAP,IAAsC;AAC1D,QAAI;AACF,YAAM;AAAEE,QAAAA,GAAF;AAAOG,QAAAA,KAAP;AAAcF,QAAAA;AAAd,UAA0BH,IAAhC;AACA,YAAMM,IAAI,GAAG;AACXL,QAAAA,EAAE,EAAEC,GADO;AAEXG,QAAAA,KAFW;AAGXF,QAAAA,OAAO,EAAE,CAACA;AAHC,OAAb;AAKA,YAAMX,WAAW,CAACe,UAAZ,CAAuBD,IAAvB,CAAN;AACAT,MAAAA,eAAe,CAACS,IAAD,CAAf;AACD,KATD,CASE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,CAA/C;AACD;AACF,GAbD;;AAeA,QAAMG,UAAU,GAAG,MAAOV,EAAP,IAAmD;AACpE,QAAI;AACF,YAAMD,IAAW,GAAG,MAAMR,WAAW,CAACmB,UAAZ,CAAuBV,EAAvB,CAA1B;AAEA,YAAMW,WAAW,GAAGjB,KAAK,CAACkB,MAAN,CAAaC,IAAI,IAAI;AACvC,eAAOA,IAAI,CAACZ,GAAL,KAAaF,IAAI,CAACE,GAAzB;AACD,OAFmB,CAApB;AAGAN,MAAAA,QAAQ,CAACgB,WAAD,CAAR;AACD,KAPD,CAOE,OAAOJ,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,CAA5C;AACD;AACF,GAXD;;AAaA,sBACM,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEb,KAAvB;AAA8B,IAAA,UAAU,EAAEgB,UAA1C;AAAsD,IAAA,aAAa,EAAEP;AAArE;AAAA;AAAA;AAAA;AAAA,UADN;AAGD,CA1CM;KAAMV,c","sourcesContent":["import React from 'react'\nimport TodoService from '../../service/todoService/TodoService'\nimport { TodosComponent } from './todos-component'\nimport { ITodo } from '../../models/interface/interface'\nimport './style.css'\n\ninterface TodosContainerProp {\n    fetchTodos: () => void\n    todos: ITodo[]\n    setTodos: (body: ITodo[]) => void\n}\n\n// eslint-disable-next-line no-undef\nexport const TodosContainer = ({ todos, setTodos }: TodosContainerProp): JSX.Element => {\n  const changeTodoState = (changedTodo: any) => {\n    todos.map((todo: ITodo) => {\n      if (changedTodo.id === todo._id) {\n        todo.isCheck = !todo.isCheck\n        return todo\n      }\n    })\n    setTodos([...todos])\n  }\n\n  const toggleIsCheck = async (todo: ITodo): Promise<void> => {\n    try {\n      const { _id, title, isCheck } = todo\n      const body = {\n        id: _id,\n        title,\n        isCheck: !isCheck\n      }\n      await TodoService.updateTodo(body)\n      changeTodoState(body)\n    } catch (e) {\n      console.log('Error in toggleIsCheck function', e)\n    }\n  }\n\n  const deleteTodo = async (id: ITodo['_id']): Promise<ITodo | void> => {\n    try {\n      const todo: ITodo = await TodoService.deleteTodo(id)\n\n      const newArrTodos = todos.filter(task => {\n        return task._id !== todo._id\n      })\n      setTodos(newArrTodos)\n    } catch (e) {\n      console.log('Error in function deleteTodo', e)\n    }\n  }\n\n  return (\n        <TodosComponent todos={todos} deleteTodo={deleteTodo} toggleIsCheck={toggleIsCheck} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}