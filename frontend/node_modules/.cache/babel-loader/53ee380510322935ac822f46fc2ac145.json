{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { TodoActionTypes } from '../types/typesTodo';\nimport { useDispatch } from 'react-redux';\nexport const fetchTodos = () => {\n  return {\n    type: TodoActionTypes.FETCH_TODOS_SUCCESS\n  };\n};\nexport const createTodo = todo => {\n  _s();\n\n  const dispatch = useDispatch();\n  return dispatch({\n    type: TodoActionTypes.CREATE_TODO_SUCCESS,\n    payload: todo\n  });\n};\n\n_s(createTodo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nexport const deleteTask = todo => {\n  return {\n    type: TodoActionTypes.DELETE_TODO_SUCCESS,\n    payload: todo\n  };\n};\nexport const changeTodo = todo => {\n  return {\n    type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS,\n    payload: todo\n  };\n};","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/store/action-creators/action.ts"],"names":["TodoActionTypes","useDispatch","fetchTodos","type","FETCH_TODOS_SUCCESS","createTodo","todo","dispatch","CREATE_TODO_SUCCESS","payload","deleteTask","DELETE_TODO_SUCCESS","changeTodo","CHANGE_TODO_STATE_SUCCESS"],"mappings":";;AAAA,SAAqBA,eAArB,QAA4C,oBAA5C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQ;AAAEC,IAAAA,IAAI,EAAEH,eAAe,CAACI;AAAxB,GAAR;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAiB;AAAA;;AACzC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,SAAOM,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEH,eAAe,CAACQ,mBAAxB;AAA6CC,IAAAA,OAAO,EAAEH;AAAtD,GAAD,CAAf;AACD,CAHM;;GAAMD,U;UACMJ,W;;;AAGnB,OAAO,MAAMS,UAAU,GAAIJ,IAAD,IAAwB;AAChD,SAAQ;AAAEH,IAAAA,IAAI,EAAEH,eAAe,CAACW,mBAAxB;AAA6CF,IAAAA,OAAO,EAAEH;AAAtD,GAAR;AACD,CAFM;AAGP,OAAO,MAAMM,UAAU,GAAIN,IAAD,IAAiB;AACzC,SAAQ;AAAEH,IAAAA,IAAI,EAAEH,eAAe,CAACa,yBAAxB;AAAmDJ,IAAAA,OAAO,EAAEH;AAA5D,GAAR;AACD,CAFM","sourcesContent":["import { TodoAction, TodoActionTypes } from '../types/typesTodo'\nimport { ITodo } from '../../models/interface/interface'\nimport { useDispatch } from 'react-redux'\n\nexport const fetchTodos = () => {\n  return ({ type: TodoActionTypes.FETCH_TODOS_SUCCESS })\n}\n\nexport const createTodo = (todo: ITodo) => {\n  const dispatch = useDispatch()\n  return dispatch({ type: TodoActionTypes.CREATE_TODO_SUCCESS, payload: todo })\n}\nexport const deleteTask = (todo: ITodo['_id']) => {\n  return ({ type: TodoActionTypes.DELETE_TODO_SUCCESS, payload: todo })\n}\nexport const changeTodo = (todo: ITodo) => {\n  return ({ type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS, payload: todo })\n}\n"]},"metadata":{},"sourceType":"module"}