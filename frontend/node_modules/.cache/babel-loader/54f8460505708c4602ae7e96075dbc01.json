{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nclass TodoService {\n  constructor() {\n    this.getAllTodos = async () => {\n      try {\n        const response = await instance.get('/allTasks');\n        return await response.data.data;\n      } catch (e) {\n        console.log('Error GET query', e);\n      }\n    };\n\n    this.createNewTodo = async body => {\n      try {\n        const response = await instance.post('/addTask', body);\n        console.log('I AM RESPONSE', response);\n        return response.data;\n      } catch (e) {\n        console.log('Error POST query', e);\n      }\n    };\n\n    this.deleteTodo = async id => {\n      try {\n        const response = await instance.delete(`/deleteTask?id=${id}`);\n        return response.data;\n      } catch (e) {\n        console.log('Error on DELETE query', e);\n      }\n    };\n\n    this.updateTodo = async (body, id) => {\n      try {\n        const response = await instance.patch(`/editTask?id=${id}`, body);\n        return response.data;\n      } catch (e) {\n        console.log('Error on PATCH query', e);\n      }\n    };\n  }\n\n}\n\nexport default TodoService;","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/service/todoService/TodoService.ts"],"names":["axios","instance","create","baseURL","headers","TodoService","getAllTodos","response","get","data","e","console","log","createNewTodo","body","post","deleteTodo","id","delete","updateTodo","patch"],"mappings":"AACA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uBADiB;AAE1BC,EAAAA,OAAO,EAAE;AAAC,oBAAgB;AAAjB;AAFiB,CAAb,CAAjB;;AAKA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACbC,WADa,GACC,YAAqC;AAChD,UAAI;AACA,cAAMC,QAAuB,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAa,WAAb,CAAtC;AACA,eAAO,MAAMD,QAAQ,CAACE,IAAT,CAAcA,IAA3B;AACH,OAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,CAA/B;AACH;AACR,KARiB;;AAAA,SAUdG,aAVc,GAUE,MAAOC,IAAP,IAAuB;AAClC,UAAI;AACA,cAAMP,QAAuB,GAAG,MAAMN,QAAQ,CAACc,IAAT,CAAc,UAAd,EAA0BD,IAA1B,CAAtC;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,QAA7B;AACA,eAAOA,QAAQ,CAACE,IAAhB;AACH,OAJD,CAIE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,CAAhC;AACH;AACL,KAlBa;;AAAA,SAoBdM,UApBc,GAoBD,MAAOC,EAAP,IAAsB;AAC9B,UAAI;AACA,cAAMV,QAAuB,GAAG,MAAMN,QAAQ,CAACiB,MAAT,CAAiB,kBAAiBD,EAAG,EAArC,CAAtC;AACA,eAAOV,QAAQ,CAACE,IAAhB;AACH,OAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,CAArC;AACH;AACL,KA3Ba;;AAAA,SA6BdS,UA7Bc,GA6BD,OAAOL,IAAP,EAAoBG,EAApB,KAAmC;AAC3C,UAAI;AACA,cAAMV,QAAuB,GAAG,MAAMN,QAAQ,CAACmB,KAAT,CAAgB,gBAAeH,EAAG,EAAlC,EAAqCH,IAArC,CAAtC;AACA,eAAOP,QAAQ,CAACE,IAAhB;AACH,OAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAApC;AACH;AACL,KApCa;AAAA;;AAAA;;AAuClB,eAAeL,WAAf","sourcesContent":["import {ITask} from \"../../models/interface/interface\";\nimport axios, {AxiosResponse} from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8080',\n    headers: {'Content-Type': 'application/json'}\n})\n\nclass TodoService {\n     getAllTodos = async (): Promise<ITask[] | void> => {\n        try {\n            const response: AxiosResponse = await instance.get('/allTasks')\n            return await response.data.data\n        } catch (e) {\n            console.log('Error GET query', e)\n        }\n}\n\n    createNewTodo = async (body: ITask) => {\n         try {\n             const response: AxiosResponse = await instance.post('/addTask', body)\n             console.log('I AM RESPONSE', response)\n             return response.data\n         } catch (e) {\n             console.log('Error POST query', e)\n         }\n    }\n\n    deleteTodo = async (id: string) => {\n         try {\n             const response: AxiosResponse = await instance.delete(`/deleteTask?id=${id}`)\n             return response.data\n         } catch (e) {\n             console.log('Error on DELETE query', e)\n         }\n    }\n\n    updateTodo = async (body: ITask, id: string) => {\n         try {\n             const response: AxiosResponse = await instance.patch(`/editTask?id=${id}`, body)\n             return response.data\n         } catch (e) {\n             console.log('Error on PATCH query', e)\n         }\n    }\n}\n\nexport default TodoService"]},"metadata":{},"sourceType":"module"}