{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TasksContainer from '../src/components/tasks-container/tasks-container';\nimport httpQuery from \"./components/httpQuery/httpQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [task, setTask] = useState([]);\n  useEffect(() => {\n    getAllTasks();\n  }, []);\n\n  async function getAllTasks() {\n    try {\n      const response = await httpQuery.get('/allTasks');\n      setTask(response.data);\n    } catch (e) {\n      console.log('I`M Error on GET query!', e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TasksContainer, {\n      tasks: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"I3GSAy+XdcJionI8zCBmPBZszgQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx"],"names":["React","useEffect","useState","TasksContainer","httpQuery","App","task","setTask","getAllTasks","response","get","data","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;;;;AAEA,MAAMC,GAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAU,EAAV,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEdO,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeA,WAAf,GAAuD;AACrD,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAV,CAAuB,WAAvB,CAAvB;AACAH,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,CAAvC;AACD;AACF;;AACD,sBACE;AAAA,2BACA,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEN;AAAvB;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAKD,CArBD;;GAAMD,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\nimport TasksContainer from '../src/components/tasks-container/tasks-container'\nimport {ITask} from \"./components/interface/interface\";\nimport httpQuery from \"./components/httpQuery/httpQuery\";\n\nconst App: FC = () => {\n  const [task, setTask] = useState<ITask[]>([])\n\n  useEffect(() => {\n\n    getAllTasks()\n  }, [])\n\n  async function getAllTasks(): Promise<ITask[] | void>  {\n    try {\n      const response = await httpQuery.get<ITask[]>('/allTasks')\n      setTask(response.data)\n    } catch (e) {\n      console.log('I`M Error on GET query!', e)\n    }\n  }\n  return (\n    <>\n    <TasksContainer tasks={task}/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}