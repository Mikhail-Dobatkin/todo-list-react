{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport httpQuery from \"../src/components/httpQuery/httpQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [task, setTask] = useState([]);\n  console.log('123', task);\n  useEffect(() => {\n    getAllTasks();\n  }, []);\n\n  async function getAllTasks() {\n    try {\n      const response = await httpQuery.get('/allTasks');\n      setTask(response.data);\n    } catch (e) {\n      console.log('I`M Error on GET query!', e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"I3GSAy+XdcJionI8zCBmPBZszgQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx"],"names":["React","useEffect","useState","httpQuery","App","task","setTask","console","log","getAllTasks","response","get","data","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,uCAAtB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAU,EAAV,CAAhC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,IAAnB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,WAAW;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,WAAf,GAAuD;AACrD,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAV,CAAuB,WAAvB,CAAvB;AACAL,MAAAA,OAAO,CAACI,QAAQ,CAACE,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCK,CAAvC;AACD;AACF;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxBD;;GAAMT,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {ITask} from \"./components/interface/interface\";\nimport httpQuery from \"../src/components/httpQuery/httpQuery\";\nimport TasksContainer from \"./components/tasks-container/tasks-container\";\n\nconst App = () => {\n\n  const [task, setTask] = useState<ITask[]>([])\n\n  console.log('123', task);\n\n  useEffect(() => {\n     getAllTasks()\n  }, [])\n\n  async function getAllTasks(): Promise<ITask[] | void>  {\n    try {\n      const response = await httpQuery.get<ITask[]>('/allTasks')\n      setTask(response.data)\n    } catch (e) {\n      console.log('I`M Error on GET query!', e)\n    }\n  }\n  return (\n    <div>\n      {/*<TasksContainer tasks={task}/>*/}\n    </div>\n\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}