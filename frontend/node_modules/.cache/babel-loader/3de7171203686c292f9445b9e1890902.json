{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container';\nimport { TodosComponent } from \"./todos-component\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodosContainer = _ref => {\n  _s();\n\n  let {\n    todos\n  } = _ref;\n  const [prevValueTitle, setTodoTitlePrev] = useState('');\n  const [indexTodoChanged, setTodoId] = useState('');\n\n  const btnEditTodo = id => {\n    console.log(id); // todos.forEach(todo => {\n    //     if (todo._id === ) {\n    //         const value = todo.title\n    //         prevTodoValue(, value)\n    //         setTodoTitlePrev(value)\n    //         setTodoId()\n    //     }\n    // })\n  };\n\n  const toggleIsCheck = async (body, id) => {\n    try {\n      const updatedTodo = await TodoService.updateTodo(body, id);\n      changeTodoHandler(body, id);\n      console.log(updatedTodo, 'I`M FUNCTION UPDATE');\n    } catch (e) {\n      console.log('Error in toggleIsCheck function', e);\n    }\n  };\n\n  const todoIsCheck = id => {\n    todos.map(async todo => {\n      if (todo._id === id) {\n        const body = {\n          id,\n          title: todo.title,\n          isCheck: todo.isCheck\n        };\n        console.log(body);\n\n        try {\n          await toggleIsCheck(body, id);\n        } catch (e) {\n          console.log('Error on todoIsCheck function', e);\n        }\n      }\n    });\n  };\n\n  const newTaskHandler = newTask => {\n    setTodos([newTask, ...todos]);\n  };\n\n  const changeTodoHandler = (changeTodo, id) => {\n    todos.map((todo, index) => {\n      if (id === todo._id) {\n        const prevArr = todos.splice(index, 1, changeTodo);\n        const arr = [...todos];\n        setTodos(arr);\n      } else {\n        console.log('не сработало');\n      }\n    });\n  };\n\n  const changeCheck = body => {\n    console.log(body);\n  }; //todo move to todo container\n\n\n  const deleteTodo = async id => {\n    try {\n      const todo = await TodoService.deleteTodo(id);\n      const newArrTodos = todos.filter(task => {\n        return task._id !== todo._id;\n      });\n      setTodos(newArrTodos);\n    } catch (e) {\n      console.log('Error in function deleteTodo', e);\n    }\n  };\n\n  const btnTodoRemove = async id => {\n    try {\n      await deleteTodo(id);\n    } catch (e) {\n      console.log('Error in function deleteTodo', e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodosComponent, {\n      todos: todos,\n      btnTodoRemove: btnTodoRemove,\n      btnEditTodo: btnEditTodo,\n      todoIsCheck: todoIsCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupContainer, {\n      changeTodoHandler: changeTodoHandler,\n      indexTodoChanged: indexTodoChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosContainer, \"iO9QkeX78hT9i5+JxJNYjRE5WeI=\");\n\n_c = TodosContainer;\nexport default TodosContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx"],"names":["React","useState","TodoService","PopupContainer","TodosComponent","TodosContainer","todos","prevValueTitle","setTodoTitlePrev","indexTodoChanged","setTodoId","btnEditTodo","id","console","log","toggleIsCheck","body","updatedTodo","updateTodo","changeTodoHandler","e","todoIsCheck","map","todo","_id","title","isCheck","newTaskHandler","newTask","setTodos","changeTodo","index","prevArr","splice","arr","changeCheck","deleteTodo","newArrTodos","filter","task","btnTodoRemove"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container';\nimport { TodosComponent } from \"./todos-component\";\nimport { ITask } from \"../../models/interface/interface\";\nimport './style.css';\n\ninterface TodosComponentProp {\n    btnEditTodo: (id: ITask[\"_id\"]) => void\n}\n\ninterface TodosContainerProp {\n    fetchTodos: () => void\n    todos: ITask[]\n    btnTodoRemove: (id: ITask[\"_id\"]) => void\n    changeTodoHandler: (body: ITask, id: ITask[\"_id\"]) => void\n}\n\nconst TodosContainer = ({todos}: TodosContainerProp): JSX.Element => {\n\n    const [prevValueTitle, setTodoTitlePrev] = useState<string>('')\n    const [indexTodoChanged, setTodoId] = useState<string>('')\n\n    const btnEditTodo = (id: string | undefined) => {\n        console.log(id)\n\n            // todos.forEach(todo => {\n            //     if (todo._id === ) {\n            //         const value = todo.title\n            //         prevTodoValue(, value)\n            //         setTodoTitlePrev(value)\n            //         setTodoId()\n            //     }\n            // })\n    }\n\n    const toggleIsCheck = async (body: ITask, id: ITask[\"_id\"]): Promise<void> => {\n        try {\n            const updatedTodo: ITask = await TodoService.updateTodo(body, id)\n            changeTodoHandler(body, id)\n            console.log(updatedTodo, 'I`M FUNCTION UPDATE')\n        } catch (e) {\n            console.log('Error in toggleIsCheck function', e)\n        }\n    };\n\n    const todoIsCheck = (id: ITask[\"_id\"]) => {\n        todos.map(async (todo) => {\n            if (todo._id === id) {\n                const body = {\n                    id,\n                    title: todo.title,\n                    isCheck: todo.isCheck\n                }\n                console.log(body)\n                try {\n                    await toggleIsCheck(body, id)\n                } catch (e) {\n                    console.log('Error on todoIsCheck function', e)\n                }\n            }\n        })\n    }\n\n    const newTaskHandler = (newTask: ITask) => {\n        setTodos([newTask, ...todos])\n    }\n\n    const changeTodoHandler = (changeTodo: ITask, id: ITask[\"_id\"]) => {\n        todos.map((todo, index) => {\n            if(id === todo._id) {\n                const prevArr = todos.splice(index, 1, changeTodo)\n                const arr = [...todos]\n                setTodos(arr)\n            } else {\n                console.log('не сработало')\n            }\n        })\n    }\n\n    const changeCheck = (body: ITask) => {\n        console.log(body)\n    }\n\n    //todo move to todo container\n    const deleteTodo = async (id: ITask[\"_id\"]): Promise<ITask | void> => {\n        try {\n            const todo: ITask = await TodoService.deleteTodo(id)\n            const newArrTodos = todos.filter(task => {\n                return task._id !== todo._id\n            })\n            setTodos(newArrTodos)\n        } catch (e) {\n            console.log('Error in function deleteTodo', e)\n        }\n    }\n    const btnTodoRemove = async (id: ITask[\"_id\"]) => {\n\n        try {\n            await deleteTodo(id)\n        } catch (e) {\n            console.log('Error in function deleteTodo', e)\n        }\n    }\n\n\n\n    return (\n        <>\n            <TodosComponent todos={todos} btnTodoRemove={btnTodoRemove} btnEditTodo={btnEditTodo} todoIsCheck={todoIsCheck} />\n            <PopupContainer changeTodoHandler={changeTodoHandler} indexTodoChanged={indexTodoChanged} />\n        </>\n    )\n}\n\nexport default TodosContainer"]},"metadata":{},"sourceType":"module"}