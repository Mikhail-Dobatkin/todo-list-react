{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-edit-popup/popup-container.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { PopupComponent } from \"./popup-component\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PopupContainer = _ref => {\n  _s();\n\n  let {\n    changeTodoHandler\n  } = _ref;\n  const [editedTitle, setEditTitle] = useState('');\n\n  const changeTodo = async (body, id) => {\n    try {\n      const updatedTodo = await TodoService.updateTodo(body, id);\n      console.log(updatedTodo);\n    } catch (e) {\n      console.log('Error in ChangeTodo function', e);\n    }\n  };\n\n  const popupInputHandler = e => {\n    const value = e.target.value;\n    setEditTitle(value);\n  };\n\n  const popupBtnHandler = () => {\n    const value = editedTitle;\n    const body = {\n      title: editedTitle\n    };\n    console.log(body);\n\n    try {// await changeTodo(body)\n      // changeTodoHandler(body)\n    } catch (e) {\n      console.log('error on changeTodo function', e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PopupComponent, {\n      popupBtnHandler: popupBtnHandler,\n      popupInputHandler: popupInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PopupContainer, \"LBw53M0spyeijJR/SmUAlYKBoYI=\");\n\n_c = PopupContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-edit-popup/popup-container.tsx"],"names":["useState","PopupComponent","TodoService","PopupContainer","changeTodoHandler","editedTitle","setEditTitle","changeTodo","body","id","updatedTodo","updateTodo","console","log","e","popupInputHandler","value","target","popupBtnHandler","title"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;;;AAOA,OAAO,MAAMC,cAAc,GAAG,QAA4D;AAAA;;AAAA,MAA3D;AAAEC,IAAAA;AAAF,GAA2D;AAEtF,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMO,UAAU,GAAG,OAAOC,IAAP,EAAoBC,EAApB,KAAwD;AACvE,QAAI;AACA,YAAMC,WAAkB,GAAG,MAAMR,WAAW,CAACS,UAAZ,CAAuBH,IAAvB,EAA6BC,EAA7B,CAAjC;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH,KAJD,CAIE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CC,CAA5C;AACH;AACJ,GARD;;AAUA,QAAMC,iBAAiB,GAAID,CAAD,IAAY;AAClC,UAAME,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AACAV,IAAAA,YAAY,CAACU,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAME,eAAe,GAAG,MAAM;AAC1B,UAAMF,KAAK,GAAGX,WAAd;AACA,UAAMG,IAAI,GAAG;AACTW,MAAAA,KAAK,EAAEd;AADE,KAAb;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,QAAI,CACA;AACA;AAEH,KAJD,CAIE,OAAOM,CAAP,EAAU;AAACF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CC,CAA5C;AAA+C;AAC/D,GAXD;;AAaA,sBACI;AAAA,2BACA,QAAC,cAAD;AACI,MAAA,eAAe,EAAEI,eADrB;AAEI,MAAA,iBAAiB,EAAEH;AAFvB;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAOH,CAvCM;;GAAMZ,c;;KAAAA,c","sourcesContent":["import { useState } from \"react\";\nimport { PopupComponent } from \"./popup-component\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { ITask } from \"../../models/interface/interface\";\n\ninterface PopupContainerProp {\n    changeTodoHandler: (changeTask: ITask, id: ITask[\"_id\"]) => void\n}\n\nexport const PopupContainer = ({ changeTodoHandler }: PopupContainerProp): JSX.Element => {\n\n    const [editedTitle, setEditTitle] = useState('')\n\n    const changeTodo = async (body: ITask, id: ITask[\"_id\"]): Promise<void> => {\n        try {\n            const updatedTodo: ITask = await TodoService.updateTodo(body, id)\n\n            console.log(updatedTodo)\n        } catch (e) {\n            console.log('Error in ChangeTodo function', e)\n        }\n    };\n\n    const popupInputHandler = (e: any) => {\n        const value = e.target.value\n        setEditTitle(value)\n    }\n\n    const popupBtnHandler = () => {\n        const value = editedTitle\n        const body = {\n            title: editedTitle\n        }\n        console.log(body)\n        try {\n            // await changeTodo(body)\n            // changeTodoHandler(body)\n\n        } catch (e) {console.log('error on changeTodo function', e)}\n    }\n\n    return (\n        <>\n        <PopupComponent\n            popupBtnHandler={popupBtnHandler}\n            popupInputHandler={popupInputHandler} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}