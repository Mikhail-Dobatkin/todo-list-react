{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nclass TodoService {}\n\nTodoService.getAllTodos = async () => {\n  try {\n    const response = await instance.get('/allTasks');\n    return response.data.data;\n  } catch (e) {\n    console.log('Error GET query', e);\n  }\n};\n\nTodoService.createNewTodo = async body => {\n  try {\n    const response = await instance.post('/addTask', body);\n    console.log('I AM RESPONSE', response);\n    return response.data;\n  } catch (e) {\n    console.log('Error POST query', e);\n  }\n};\n\nTodoService.deleteTodo = async id => {\n  try {\n    const response = await instance.delete(`/deleteTask?id=${id}`);\n    return response.data;\n  } catch (e) {\n    console.log('Error on DELETE query', e);\n  }\n};\n\nTodoService.updateTodo = async (body, id) => {\n  try {\n    const response = await instance.patch(`/editTask?id=${id}`, body);\n    return response.data;\n  } catch (e) {\n    console.log('Error on PATCH query', e);\n  }\n};\n\nexport default TodoService;","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/service/todoService/TodoService.ts"],"names":["axios","instance","create","baseURL","headers","TodoService","getAllTodos","response","get","data","e","console","log","createNewTodo","body","post","deleteTodo","id","delete","updateTodo","patch"],"mappings":"AACA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uBADiB;AAE1BC,EAAAA,OAAO,EAAE;AAAC,oBAAgB;AAAjB;AAFiB,CAAb,CAAjB;;AAKA,MAAMC,WAAN,CAAkB;;AAAZA,W,CACaC,W,GAAc,YAAqC;AAC9D,MAAI;AACA,UAAMC,QAAuB,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAa,WAAb,CAAtC;AACA,WAAOD,QAAQ,CAACE,IAAT,CAAcA,IAArB;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,CAA/B;AACH;AACR,C;;AARKL,W,CAUWQ,a,GAAgB,MAAOC,IAAP,IAAuB;AAC/C,MAAI;AACA,UAAMP,QAAuB,GAAG,MAAMN,QAAQ,CAACc,IAAT,CAAc,UAAd,EAA0BD,IAA1B,CAAtC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,QAA7B;AACA,WAAOA,QAAQ,CAACE,IAAhB;AACH,GAJD,CAIE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,CAAhC;AACH;AACL,C;;AAlBCL,W,CAoBYW,U,GAAa,MAAOC,EAAP,IAAsB;AAC5C,MAAI;AACA,UAAMV,QAAuB,GAAG,MAAMN,QAAQ,CAACiB,MAAT,CAAiB,kBAAiBD,EAAG,EAArC,CAAtC;AACA,WAAOV,QAAQ,CAACE,IAAhB;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,CAArC;AACH;AACL,C;;AA3BCL,W,CA6BYc,U,GAAa,OAAOL,IAAP,EAAoBG,EAApB,KAAmC;AACzD,MAAI;AACA,UAAMV,QAAuB,GAAG,MAAMN,QAAQ,CAACmB,KAAT,CAAgB,gBAAeH,EAAG,EAAlC,EAAqCH,IAArC,CAAtC;AACA,WAAOP,QAAQ,CAACE,IAAhB;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAApC;AACH;AACL,C;;AAGL,eAAeL,WAAf","sourcesContent":["import {ITask} from \"../../models/interface/interface\";\nimport axios, {AxiosResponse} from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8080',\n    headers: {'Content-Type': 'application/json'}\n})\n\nclass TodoService {\n     public static getAllTodos = async (): Promise<ITask[] | void> => {\n        try {\n            const response: AxiosResponse = await instance.get('/allTasks')\n            return response.data.data\n        } catch (e) {\n            console.log('Error GET query', e)\n        }\n}\n\n   public static createNewTodo = async (body: ITask) => {\n         try {\n             const response: AxiosResponse = await instance.post('/addTask', body)\n             console.log('I AM RESPONSE', response)\n             return response.data\n         } catch (e) {\n             console.log('Error POST query', e)\n         }\n    }\n\n    public static deleteTodo = async (id: string) => {\n         try {\n             const response: AxiosResponse = await instance.delete(`/deleteTask?id=${id}`)\n             return response.data\n         } catch (e) {\n             console.log('Error on DELETE query', e)\n         }\n    }\n\n    public static updateTodo = async (body: ITask, id: string) => {\n         try {\n             const response: AxiosResponse = await instance.patch(`/editTask?id=${id}`, body)\n             return response.data\n         } catch (e) {\n             console.log('Error on PATCH query', e)\n         }\n    }\n}\n\nexport default TodoService\n"]},"metadata":{},"sourceType":"module"}