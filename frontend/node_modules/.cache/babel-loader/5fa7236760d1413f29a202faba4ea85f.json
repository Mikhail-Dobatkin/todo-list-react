{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/main-container/main-container.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TodoService from '../../service/todoService/TodoService';\nimport { TodosContainer } from '../todos-container/todos-container';\nimport { TodoFormContainer } from '../todo-form/todo-form-container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainContainer = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const dispatch = useDispatch(); // @ts-ignore\n\n  const {\n    books\n  } = useSelector(state => state.books);\n  console.log(books);\n  /* уже используется */\n\n  const fetchTodos = async () => {\n    try {\n      const getTodos = await TodoService.getAllTodos();\n      return setTodos(getTodos.reverse());\n    } catch (e) {\n      console.log('Error in fetchTodos', e);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, []); // const newTaskHandler = (newTask: ITodo) => {\n  //   setTodos([newTask, ...todos])\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoFormContainer\n    /* newTaskHandler={newTaskHandler} */\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodosContainer, {\n      fetchTodos: fetchTodos,\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this)]\n        }, book._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 26\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainContainer, \"/njlvlOepehUfDbbhvdaS6Tbbwo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/main-container/main-container.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","TodoService","TodosContainer","TodoFormContainer","MainContainer","todos","setTodos","dispatch","books","state","console","log","fetchTodos","getTodos","getAllTodos","reverse","e","map","book","title","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,cAAT,QAA+B,oCAA/B;AAEA,SAASC,iBAAT,QAAkC,kCAAlC;;;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAmB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAU,EAAV,CAAlC;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B,CAF8C,CAI9C;;AACA,QAAM;AAAES,IAAAA;AAAF,MAAYR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA;;AACA,QAAMI,UAAU,GAAG,YAA2B;AAC5C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACa,WAAZ,EAAvB;AACA,aAAOR,QAAQ,CAACO,QAAQ,CAACE,OAAT,EAAD,CAAf;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCK,CAAnC;AACD;AACF,GAPD;;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAlB8C,CAsB9C;AACA;AACA;;AAEA,sBACU;AAAA,4BACI,QAAC;AAAkB;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AACI,MAAA,UAAU,EAAEA,UADhB;AAEI,MAAA,KAAK,EAAEP,KAFX;AAGI,MAAA,QAAQ,EAAEC;AAHd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOE;AAAA,gBACGE,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAe;AACxB,4BAAO;AAAA,kCACH;AAAA,sBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA,WAAUD,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AAID,OALA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADV;AAkBD,CA5CM;;GAAMhB,a;UAEML,W,EAGCC,W;;;KALPI,a","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TodoService from '../../service/todoService/TodoService'\nimport { TodosContainer } from '../todos-container/todos-container'\nimport { ITodo } from '../../models/interface/interface'\nimport { TodoFormContainer } from '../todo-form/todo-form-container'\nimport { fetchTodos } from '../../store/action-creators/action-creator'\n\nexport const MainContainer = (): JSX.Element => {\n  const [todos, setTodos] = useState<ITodo[]>([])\n  const dispatch = useDispatch()\n\n  // @ts-ignore\n  const { books } = useSelector(state => state.books)\n  console.log(books)\n\n  /* уже используется */\n  const fetchTodos = async (): Promise<void> => {\n    try {\n      const getTodos = await TodoService.getAllTodos()\n      return setTodos(getTodos.reverse())\n    } catch (e) {\n      console.log('Error in fetchTodos', e)\n    }\n  }\n\n  useEffect(() => {\n    dispatch(fetchTodos())\n  }, [])\n\n  // const newTaskHandler = (newTask: ITodo) => {\n  //   setTodos([newTask, ...todos])\n  // }\n\n  return (\n            <>\n                <TodoFormContainer /* newTaskHandler={newTaskHandler} */ />\n                <TodosContainer\n                    fetchTodos={fetchTodos}\n                    todos={todos}\n                    setTodos={setTodos}\n                />\n              <div>\n                {books.map((book: any) => {\n                  return <div key={book._id}>\n                      <p>{book.title}</p>\n                      <input type=\"checkbox\" />\n                  </div>\n                })}\n              </div>\n            </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}