{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './style.css';\nimport { TodosComponent } from \"./todos-component\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport TodoForm from \"../todo-form/todo-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodosContainer = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await new TodoService().getAllTasks();\n      setTodos(response);\n      console.log(response);\n    } catch (e) {\n      console.log('qwe', e);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const newTaskHandler = newTask => {\n    setTodos([newTask, ...todos]);\n  };\n\n  const deleteTask = async id => {\n    try {\n      const response = await new TodoService().deleteTask(id);\n      const prevArr = [...todos.slice()];\n      const newArr = prevArr.splice(response, 0);\n      console.log(prevArr);\n    } catch (e) {\n      console.log('Error on DELETE query', e);\n    }\n  };\n\n  const btnTodoRemove = e => {\n    e.preventDefault();\n    const id = e.target.id;\n    deleteTask(id);\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      newTaskHandler: newTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodosComponent, {\n      todos: todos,\n      btnTodoRemove: btnTodoRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosContainer, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TodosContainer;\nexport default TodosContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx"],"names":["React","useEffect","useState","TodosComponent","TodoService","TodoForm","TodosContainer","todos","setTodos","fetchTasks","response","getAllTasks","console","log","e","newTaskHandler","newTask","deleteTask","id","prevArr","slice","newArr","splice","btnTodoRemove","preventDefault","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,aAAP;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;;AAEA,MAAMC,cAAc,GAAG,MAAmB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAU,EAAV,CAAlC;;AAEA,QAAMO,UAAU,GAAG,YAAqC;AACpD,QAAI;AACA,YAAMC,QAAa,GAAG,MAAM,IAAIN,WAAJ,GAAkBO,WAAlB,EAA5B;AACAH,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KAJD,CAIE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,CAAnB;AACH;AACJ,GARD;;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,cAAc,GAAIC,OAAD,IAAoB;AACvCR,IAAAA,QAAQ,CAAC,CAACQ,OAAD,EAAU,GAAGT,KAAb,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMU,UAAU,GAAG,MAAOC,EAAP,IAA6C;AAC5D,QAAG;AACC,YAAMR,QAAe,GAAG,MAAM,IAAIN,WAAJ,GAAkBa,UAAlB,CAA6BC,EAA7B,CAA9B;AACA,YAAMC,OAAO,GAAG,CAAC,GAAGZ,KAAK,CAACa,KAAN,EAAJ,CAAhB;AACA,YAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,CAAeZ,QAAf,EAAyB,CAAzB,CAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACH,KALD,CAKE,OAAOL,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCC,CAArC;AACH;AACJ,GATD;;AAWA,QAAMS,aAAa,GAAIT,CAAD,IAAY;AAC9BA,IAAAA,CAAC,CAACU,cAAF;AACA,UAAMN,EAAE,GAAGJ,CAAC,CAACW,MAAF,CAASP,EAApB;AACAD,IAAAA,UAAU,CAACC,EAAD,CAAV;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ;AACH,GALD;;AAOA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,cAAc,EAAEH;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAER,KAAvB;AAA8B,MAAA,aAAa,EAAEgB;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA7CD;;GAAMjB,c;;KAAAA,c;AA8CN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ITask } from \"../../models/interface/interface\";\nimport './style.css'\nimport {TodosComponent} from \"./todos-component\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport TodoForm from \"../todo-form/todo-form\";\n\nconst TodosContainer = (): JSX.Element => {\n    const [todos, setTodos] = useState<ITask[]>([])\n\n    const fetchTasks = async (): Promise<ITask[] | void> => {\n        try {\n            const response: any = await new TodoService().getAllTasks()\n            setTodos(response)\n            console.log(response)\n        } catch (e) {\n            console.log('qwe', e)\n        }\n    }\n\n    useEffect(() => {\n        fetchTasks()\n    }, [])\n\n    const newTaskHandler = (newTask: ITask) => {\n        setTodos([newTask, ...todos])\n    }\n\n    const deleteTask = async (id: string): Promise<ITask | void> => {\n        try{\n            const response: ITask = await new TodoService().deleteTask(id)\n            const prevArr = [...todos.slice()]\n            const newArr = prevArr.splice(response, 0)\n            console.log(prevArr)\n        } catch (e) {\n            console.log('Error on DELETE query', e)\n        }\n    }\n\n    const btnTodoRemove = (e: any) => {\n        e.preventDefault()\n        const id = e.target.id\n        deleteTask(id)\n        console.log(id)\n    }\n\n    return (\n        <>\n            <TodoForm newTaskHandler={newTaskHandler}/>\n            <TodosComponent todos={todos} btnTodoRemove={btnTodoRemove}/>\n        </>\n    )\n}\nexport default TodosContainer"]},"metadata":{},"sourceType":"module"}