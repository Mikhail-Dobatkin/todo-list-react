{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nclass TodoService {}\n\nTodoService.getAllTodos = async () => {\n  try {\n    const response = await instance.get('/allTasks');\n    return response.data.data;\n  } catch (e) {\n    console.log('Error GET query', e);\n    return [];\n  }\n};\n\nTodoService.createNewTodo = async body => {\n  try {\n    const response = await instance.post('/addTask', body);\n    return response.data;\n  } catch (e) {\n    console.log('Error POST query', e);\n  }\n};\n\nTodoService.deleteTodo = async id => {\n  try {\n    const response = await instance.delete(`/deleteTask?id=${id}`);\n    return response.data;\n  } catch (e) {\n    console.log('Error on DELETE query', e);\n  }\n};\n\nTodoService.updateTodo = async body => {\n  try {\n    const response = await instance.patch('/editTask', body);\n    return response.data;\n  } catch (e) {\n    console.log('Error on PATCH query', e);\n  }\n};\n\nexport default TodoService;","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/service/todoService/TodoService.ts"],"names":["axios","instance","create","baseURL","headers","TodoService","getAllTodos","response","get","data","e","console","log","createNewTodo","body","post","deleteTodo","id","delete","updateTodo","patch"],"mappings":"AACA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,uBADmB;AAE5BC,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB;AAFmB,CAAb,CAAjB;;AAKA,MAAMC,WAAN,CAAkB;;AAAZA,W,CACaC,W,GAAc,YAA8B;AACxD,MAAI;AACF,UAAMC,QAAuB,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAa,WAAb,CAAtC;AACA,WAAOD,QAAQ,CAACE,IAAT,CAAcA,IAArB;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,CAA/B;AACA,WAAO,EAAP;AACD;AACF,C;;AATAL,W,CAWWQ,a,GAAgB,MAAOC,IAAP,IAAuB;AACnD,MAAI;AACF,UAAMP,QAAuB,GAAG,MAAMN,QAAQ,CAACc,IAAT,CAAc,UAAd,EAA0BD,IAA1B,CAAtC;AACA,WAAOP,QAAQ,CAACE,IAAhB;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,CAAhC;AACD;AACF,C;;AAlBEL,W,CAoBYW,U,GAAa,MAAOC,EAAP,IAA4B;AACrD,MAAI;AACF,UAAMV,QAAuB,GAAG,MAAMN,QAAQ,CAACiB,MAAT,CAAiB,kBAAiBD,EAAG,EAArC,CAAtC;AACA,WAAOV,QAAQ,CAACE,IAAhB;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,CAArC;AACD;AACF,C;;AA3BCL,W,CA6BYc,U,GAAa,MAAOL,IAAP,IAAuB;AAChD,MAAI;AACF,UAAMP,QAAuB,GAAG,MAAMN,QAAQ,CAACmB,KAAT,CAAe,WAAf,EAA4BN,IAA5B,CAAtC;AACA,WAAOP,QAAQ,CAACE,IAAhB;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAApC;AACD;AACF,C;;AAGL,eAAeL,WAAf","sourcesContent":["import { ITodo } from '../../models/interface/interface'\nimport axios, { AxiosResponse } from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: { 'Content-Type': 'application/json' }\n})\n\nclass TodoService {\n     public static getAllTodos = async (): Promise<ITodo[]> => {\n       try {\n         const response: AxiosResponse = await instance.get('/allTasks')\n         return response.data.data\n       } catch (e) {\n         console.log('Error GET query', e)\n         return []\n       }\n     }\n\n   public static createNewTodo = async (body: ITodo) => {\n     try {\n       const response: AxiosResponse = await instance.post('/addTask', body)\n       return response.data\n     } catch (e) {\n       console.log('Error POST query', e)\n     }\n   }\n\n    public static deleteTodo = async (id: ITodo['_id']) => {\n      try {\n        const response: AxiosResponse = await instance.delete(`/deleteTask?id=${id}`)\n        return response.data\n      } catch (e) {\n        console.log('Error on DELETE query', e)\n      }\n    }\n\n    public static updateTodo = async (body: ITodo) => {\n      try {\n        const response: AxiosResponse = await instance.patch('/editTask', body)\n        return response.data\n      } catch (e) {\n        console.log('Error on PATCH query', e)\n      }\n    }\n}\n\nexport default TodoService\n"]},"metadata":{},"sourceType":"module"}