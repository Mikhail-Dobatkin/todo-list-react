{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport List from \"./list/list\";\nimport httpQuery from \"./components/httpQuery/httpQuery\";\nimport Task from \"./components/task/task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [task, setTask] = useState([]);\n  useEffect(() => {\n    getAllTasks();\n  }, []);\n\n  async function getAllTasks() {\n    try {\n      const response = await httpQuery.get('/allTasks');\n      setTask(response.data);\n    } catch (e) {\n      console.log('I`M Error on GET query!', e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      tasks: task,\n      renderTask: task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"I3GSAy+XdcJionI8zCBmPBZszgQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx"],"names":["React","useEffect","useState","List","httpQuery","Task","App","task","setTask","getAllTasks","response","get","data","e","console","log","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAEA,MAAMC,GAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAU,EAAV,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEdQ,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeA,WAAf,GAAuD;AACrD,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAV,CAAuB,WAAvB,CAAvB;AACAH,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,CAAvC;AACD;AACF;;AACD,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,IAAb;AAAmB,MAAA,UAAU,EAAGA,IAAD,iBAAiB,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ,SAAuBA,IAAI,CAACS,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxBD;;GAAMV,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\nimport List from \"./list/list\";\nimport {ITask} from \"./components/interface/interface\";\nimport httpQuery from \"./components/httpQuery/httpQuery\";\nimport Task from \"./components/task/task\";\n\nconst App: FC = () => {\n  const [task, setTask] = useState<ITask[]>([])\n\n  useEffect(() => {\n\n    getAllTasks()\n  }, [])\n\n  async function getAllTasks(): Promise<ITask[] | void>  {\n    try {\n      const response = await httpQuery.get<ITask[]>('/allTasks')\n      setTask(response.data)\n    } catch (e) {\n      console.log('I`M Error on GET query!', e)\n    }\n  }\n  return (\n    <div>\n      <List tasks={task} renderTask={(task: ITask) => <Task task={task} key={task.id}/>}\n\n      />\n    </div>\n\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}