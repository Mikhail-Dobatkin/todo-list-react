{"ast":null,"code":"import { TodoActionTypes } from '../types/typesTodo';\nconst initialState = {\n  books: []\n};\nexport const todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TodoActionTypes.FETCH_TODOS:\n      return {\n        books: []\n      };\n\n    case TodoActionTypes.FETCH_TODOS_SUCCESS:\n      return {\n        books: action.payload\n      };\n\n    case TodoActionTypes.CREATE_TODO_SUCCESS:\n      return { ...state,\n        books: [...state.books, action.payload]\n      };\n\n    case TodoActionTypes.DELETE_TODO_SUCCESS:\n      return { ...state,\n        books: state.books.filter(todo => todo._id !== action.payload._id)\n      };\n\n    case TodoActionTypes.CHANGE_TODO_STATE_SUCCESS:\n      return { ...state,\n        books: [...state.books.map(todo => {\n          console.log(todo, action.payload);\n\n          if (todo._id === action.payload._id) {\n            todo.isCheck = !todo.isCheck;\n          }\n\n          return todo;\n        })]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/store/reducers/reducers.ts"],"names":["TodoActionTypes","initialState","books","todoReducer","state","action","type","FETCH_TODOS","FETCH_TODOS_SUCCESS","payload","CREATE_TODO_SUCCESS","DELETE_TODO_SUCCESS","filter","todo","_id","CHANGE_TODO_STATE_SUCCESS","map","console","log","isCheck"],"mappings":"AAAA,SAAqBA,eAArB,QAAuD,oBAAvD;AAGA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,KAAK,EAAE;AADuB,CAAhC;AAIA,OAAO,MAAMC,WAAW,GAAG,YAAqE;AAAA,MAApEC,KAAoE,uEAA5DH,YAA4D;AAAA,MAA9CI,MAA8C;;AAC9F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAe,CAACO,WAArB;AACE,aAAO;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACF,SAAKF,eAAe,CAACQ,mBAArB;AACE,aAAO;AAAEN,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAAhB,OAAP;;AACF,SAAKT,eAAe,CAACU,mBAArB;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACI,OAAxB;AAAnB,OAAP;;AACF,SAAKT,eAAe,CAACW,mBAArB;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACI,OAAP,CAAeK,GAAvD;AAAnB,OAAP;;AACF,SAAKd,eAAe,CAACe,yBAArB;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYc,GAAZ,CAAiBH,IAAD,IAAiB;AAC1CI,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkBR,MAAM,CAACI,OAAzB;;AACA,cAAII,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACI,OAAP,CAAeK,GAAhC,EAAqC;AACnCD,YAAAA,IAAI,CAACM,OAAL,GAAe,CAACN,IAAI,CAACM,OAArB;AACD;;AACD,iBAAON,IAAP;AACD,SANU,CAAJ;AAFF,OAAP;;AAUF;AACE,aAAOT,KAAP;AArBJ;AAuBD,CAxBM","sourcesContent":["import { TodoAction, TodoActionTypes, TodoState } from '../types/typesTodo'\nimport { ITodo } from '../../models/interface/interface'\n\nconst initialState: TodoState = {\n  books: []\n}\n\nexport const todoReducer = (state = initialState, action: TodoAction): TodoState | undefined => {\n  switch (action.type) {\n    case TodoActionTypes.FETCH_TODOS:\n      return { books: [] }\n    case TodoActionTypes.FETCH_TODOS_SUCCESS:\n      return { books: action.payload }\n    case TodoActionTypes.CREATE_TODO_SUCCESS:\n      return { ...state, books: [...state.books, action.payload] }\n    case TodoActionTypes.DELETE_TODO_SUCCESS:\n      return { ...state, books: state.books.filter(todo => todo._id !== action.payload._id) }\n    case TodoActionTypes.CHANGE_TODO_STATE_SUCCESS:\n      return {\n        ...state,\n        books: [...state.books.map((todo: ITodo) => {\n          console.log(todo, action.payload)\n          if (todo._id === action.payload._id) {\n            todo.isCheck = !todo.isCheck\n          }\n          return todo\n        })]\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}