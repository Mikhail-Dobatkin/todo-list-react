{"ast":null,"code":"import { TodoActionTypes } from '../types/typesTodo';\nconst initialState = {\n  books: []\n};\nexport const todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TodoActionTypes.FETCH_TODOS:\n      return {\n        books: []\n      };\n\n    case TodoActionTypes.FETCH_TODOS_SUCCESS:\n      return {\n        books: action.payload\n      };\n\n    case TodoActionTypes.CREATE_TODO_SUCCESS:\n      return { ...state,\n        books: [...state.books, action.payload]\n      };\n\n    case TodoActionTypes.DELETE_TODO_SUCCESS:\n      return { ...state,\n        books: [...state.books, state.books.filter(todo => action.payload._id !== todo._id)]\n      };\n\n    case TodoActionTypes.CHANGE_TODO_STATE:\n      return { ...state,\n        books: [...state.books, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/store/reducers/reducers.ts"],"names":["TodoActionTypes","initialState","books","todoReducer","state","action","type","FETCH_TODOS","FETCH_TODOS_SUCCESS","payload","CREATE_TODO_SUCCESS","DELETE_TODO_SUCCESS","filter","todo","_id","CHANGE_TODO_STATE"],"mappings":"AAAA,SAAqBA,eAArB,QAAuD,oBAAvD;AAGA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,KAAK,EAAE;AADuB,CAAhC;AAIA,OAAO,MAAMC,WAAW,GAAG,YAA8E;AAAA,MAA7EC,KAA6E,uEAArEH,YAAqE;AAAA,MAAvDI,MAAuD;;AACvG,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAe,CAACO,WAArB;AACE,aAAO;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACF,SAAKF,eAAe,CAACQ,mBAArB;AACE,aAAO;AAAEN,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAAhB,OAAP;;AACF,SAAKT,eAAe,CAACU,mBAArB;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACI,OAAxB;AAAnB,OAAP;;AACF,SAAKT,eAAe,CAACW,mBAArB;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAmBC,IAAI,IAAIR,MAAM,CAACI,OAAP,CAAeK,GAAf,KAAuBD,IAAI,CAACC,GAAvD,CAAjB;AAAnB,OAAP;;AACF,SAAKd,eAAe,CAACe,iBAArB;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACI,OAAxB;AAAnB,OAAP;;AACF;AACE,aAAOL,KAAP;AAZJ;AAcD,CAfM","sourcesContent":["import { TodoAction, TodoActionTypes, TodoState } from '../types/typesTodo'\nimport { ITodo } from '../../models/interface/interface'\n\nconst initialState: TodoState = {\n  books: []\n}\n\nexport const todoReducer = (state = initialState, action: TodoAction): { books: (ITodo | ITodo[])[] } => {\n  switch (action.type) {\n    case TodoActionTypes.FETCH_TODOS:\n      return { books: [] }\n    case TodoActionTypes.FETCH_TODOS_SUCCESS:\n      return { books: action.payload }\n    case TodoActionTypes.CREATE_TODO_SUCCESS:\n      return { ...state, books: [...state.books, action.payload] }\n    case TodoActionTypes.DELETE_TODO_SUCCESS:\n      return { ...state, books: [...state.books, state.books.filter(todo => action.payload._id !== todo._id)] }\n    case TodoActionTypes.CHANGE_TODO_STATE:\n      return { ...state, books: [...state.books, action.payload] }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}