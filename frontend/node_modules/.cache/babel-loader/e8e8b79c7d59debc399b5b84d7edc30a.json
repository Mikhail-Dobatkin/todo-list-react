{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo/todo.tsx\";\nimport React from 'react';\nimport { TodoActionTypes } from '../types/typesTodo';\nimport TodoService from '../../service/todoService/TodoService';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  let {\n    todo,\n    deleteTodo,\n    toggleIsCheck\n  } = _ref;\n\n  const fetchBooks = () => {\n    return async dispatch => {\n      try {\n        dispatch({\n          type: TodoActionTypes.FETCH_TODOS\n        });\n        const todo = await TodoService.getAllTodos();\n        dispatch({\n          type: TodoActionTypes.FETCH_TODOS_SUCCESS,\n          payload: todo\n        });\n        console.log(todo);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  };\n\n  const createBook = book => {\n    return async dispatch => {\n      try {\n        dispatch({\n          type: TodoActionTypes.CREATE_TODO\n        });\n        const createdBook = await TodoService.createNewTodo(book);\n        dispatch({\n          type: TodoActionTypes.CREATE_TODO_SUCCESS,\n          payload: createdBook\n        });\n      } catch (e) {\n        console.log('Error in createBook', e);\n      }\n    };\n  };\n\n  const deleteBook = index => {\n    return async dispatch => {\n      try {\n        const deleteBook = await TodoService.deleteTodo(index);\n        dispatch({\n          type: TodoActionTypes.DELETE_TODO_SUCCESS,\n          payload: deleteBook\n        });\n      } catch (e) {\n        console.log('Error in function deleteBook', e);\n      }\n    };\n  };\n\n  const change = todo => {\n    return async dispatch => {\n      try {\n        const changedTodoState = await TodoService.updateTodo(todo);\n        dispatch({\n          type: TodoActionTypes.CHANGE_TODO_STATE,\n          payload: changedTodoState\n        });\n      } catch (e) {\n        console.log('Error in changeTodoState function', e);\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => toggleIsCheck(todo),\n      checked: todo.isCheck,\n      value: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: todo._id,\n      className: \"btn-trash\",\n      onClick: () => deleteTodo(todo._id),\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo/todo.tsx"],"names":["React","TodoActionTypes","TodoService","Task","todo","deleteTodo","toggleIsCheck","fetchBooks","dispatch","type","FETCH_TODOS","getAllTodos","FETCH_TODOS_SUCCESS","payload","console","log","e","createBook","book","CREATE_TODO","createdBook","createNewTodo","CREATE_TODO_SUCCESS","deleteBook","index","DELETE_TODO_SUCCESS","change","changedTodoState","updateTodo","CHANGE_TODO_STATE","isCheck","title","_id"],"mappings":"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","sourcesContent":["import React, { FC } from 'react'\nimport { ITodo } from '../../models/interface/interface'\nimport { TodoAction, TodoActionTypes } from '../types/typesTodo'\nimport { Dispatch } from 'redux'\nimport TodoService from '../../service/todoService/TodoService'\nimport './style.css'\n\ninterface TodoProps {\n    todo: ITodo\n    deleteTodo: (id: ITodo['_id']) => void\n    toggleIsCheck: (todo: ITodo) => void\n}\n\nconst Task: FC<TodoProps> = ({ todo, deleteTodo, toggleIsCheck }) => {\n  const fetchBooks = () => {\n    return async (dispatch: Dispatch<TodoAction>) => {\n      try {\n        dispatch({ type: TodoActionTypes.FETCH_TODOS })\n        const todo = await TodoService.getAllTodos()\n        dispatch({ type: TodoActionTypes.FETCH_TODOS_SUCCESS, payload: todo })\n        console.log(todo)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  const createBook = (book: ITodo) => {\n    return async (dispatch: Dispatch<TodoAction>) => {\n      try {\n        dispatch({ type: TodoActionTypes.CREATE_TODO })\n        const createdBook = await TodoService.createNewTodo(book)\n        dispatch({ type: TodoActionTypes.CREATE_TODO_SUCCESS, payload: createdBook })\n      } catch (e) {\n        console.log('Error in createBook', e)\n      }\n    }\n  }\n\n  const deleteBook = (index: ITodo['_id']) => {\n    return async (dispatch: Dispatch<TodoAction>) => {\n      try {\n        const deleteBook = await TodoService.deleteTodo(index)\n        dispatch({ type: TodoActionTypes.DELETE_TODO_SUCCESS, payload: deleteBook })\n      } catch (e) {\n        console.log('Error in function deleteBook', e)\n      }\n    }\n  }\n\n  const change = (todo: ITodo) => {\n    return async (dispatch: Dispatch<TodoAction>) => {\n      try {\n        const changedTodoState = await TodoService.updateTodo(todo)\n        dispatch({ type: TodoActionTypes.CHANGE_TODO_STATE, payload: changedTodoState })\n      } catch (e) {\n        console.log('Error in changeTodoState function', e)\n      }\n    }\n  }\n\n  return (\n    <div className='task'>\n        <input type=\"checkbox\" onChange={() => toggleIsCheck(todo)} checked={todo.isCheck} value={todo.title} />\n        <p>{todo.title}</p>\n        <button id={todo._id} className='btn-trash' onClick={() => deleteTodo(todo._id)}>Remove</button>\n    </div>\n  )\n}\n\nexport default Task\n"]},"metadata":{},"sourceType":"module"}