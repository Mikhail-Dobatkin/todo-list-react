{"ast":null,"code":"import { TodoActionTypes } from '../types/typesTodo';\nimport TodoService from '../../service/todoService/TodoService';\nexport const fetchBooks = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: TodoActionTypes.FETCH_TODOS\n      });\n      const todo = await TodoService.getAllTodos();\n      dispatch({\n        type: TodoActionTypes.FETCH_TODOS_SUCCESS,\n        payload: todo\n      });\n      console.log(todo);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const createBook = book => {\n  return async dispatch => {\n    dispatch({\n      type: TodoActionTypes.CREATE_TODO\n    });\n    const createdBook = await TodoService.createNewTodo(book);\n  };\n};","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/store/action-creators/todo.ts"],"names":["TodoActionTypes","TodoService","fetchBooks","dispatch","type","FETCH_TODOS","todo","getAllTodos","FETCH_TODOS_SUCCESS","payload","console","log","e","createBook","book","CREATE_TODO","createdBook","createNewTodo"],"mappings":"AAAA,SAAqBA,eAArB,QAA4C,oBAA5C;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAO,MAAOC,QAAP,IAA0C;AAC/C,QAAI;AACFA,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ,eAAe,CAACK;AAAxB,OAAD,CAAR;AACA,YAAMC,IAAI,GAAG,MAAML,WAAW,CAACM,WAAZ,EAAnB;AACAJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ,eAAe,CAACQ,mBAAxB;AAA6CC,QAAAA,OAAO,EAAEH;AAAtD,OAAD,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,KALD,CAKE,OAAOM,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,GATD;AAUD,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAiB;AACzC,SAAO,MAAOX,QAAP,IAA0C;AAC/CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,eAAe,CAACe;AAAxB,KAAD,CAAR;AACA,UAAMC,WAAW,GAAG,MAAMf,WAAW,CAACgB,aAAZ,CAA0BH,IAA1B,CAA1B;AACD,GAHD;AAID,CALM","sourcesContent":["import { TodoAction, TodoActionTypes } from '../types/typesTodo'\nimport { Dispatch } from 'redux'\nimport TodoService from '../../service/todoService/TodoService'\nimport { ITodo } from '../../models/interface/interface'\n\nexport const fetchBooks = () => {\n  return async (dispatch: Dispatch<TodoAction>) => {\n    try {\n      dispatch({ type: TodoActionTypes.FETCH_TODOS })\n      const todo = await TodoService.getAllTodos()\n      dispatch({ type: TodoActionTypes.FETCH_TODOS_SUCCESS, payload: todo })\n      console.log(todo)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport const createBook = (book: ITodo) => {\n  return async (dispatch: Dispatch<TodoAction>) => {\n    dispatch({ type: TodoActionTypes.CREATE_TODO })\n    const createdBook = await TodoService.createNewTodo(book)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}