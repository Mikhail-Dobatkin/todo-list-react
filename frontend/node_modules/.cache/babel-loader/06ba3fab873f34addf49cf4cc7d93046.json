{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/components/task/task.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport httpQuery from '../httpQuery/httpQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  _s();\n\n  let {\n    task\n  } = _ref;\n  const [tasks, setTask] = useState([]);\n  useEffect(() => {\n    getAllTasks();\n  }, []);\n\n  async function getAllTasks() {\n    try {\n      const response = await httpQuery.get('/allTasks');\n      setTask(response.data);\n    } catch (e) {\n      console.log('I`M Error on GET query!', e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.isCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"Oalh7gGRly8nmy9ApEFAxF9qmMk=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/components/task/task.tsx"],"names":["React","useEffect","useState","httpQuery","Task","task","tasks","setTask","getAllTasks","response","get","data","e","console","log","isCheck","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AAEA,OAAOC,SAAP,MAAuB,wBAAvB;;;AAMA,MAAMC,IAAmB,GAAG,QAAY;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAEpC,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAAU,EAAV,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,WAAW;AACV,GAHI,EAGF,EAHE,CAAT;;AAKA,iBAAeA,WAAf,GAAuD;AACnD,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAV,CAAuB,WAAvB,CAAvB;AACAH,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,CAAvC;AACH;AACJ;;AACD,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEP,IAAI,CAACU;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIV,IAAI,CAACW;AAAT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvBD;;GAAMZ,I;;KAAAA,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React, {FC, useEffect, useState} from \"react\";\nimport { ITask } from \"../interface/interface\";\nimport httpQuery  from '../httpQuery/httpQuery'\n\ninterface TaskProps {\n    task: ITask\n}\n\nconst Task: FC<TaskProps> = ({task}) => {\n\n    const [tasks, setTask] = useState<ITask[]>([])\n\n    useEffect(() => {\n\n        getAllTasks()\n        }, [])\n\n    async function getAllTasks(): Promise<ITask[] | void>  {\n        try {\n            const response = await httpQuery.get<ITask[]>('/allTasks')\n            setTask(response.data)\n        } catch (e) {\n            console.log('I`M Error on GET query!', e)\n        }\n    }\n    return(\n        <div>\n            <input type=\"checkbox\" checked={task.isCheck}/>\n            <p>{task.title}</p>\n        </div>\n    )\n}\nexport default Task"]},"metadata":{},"sourceType":"module"}