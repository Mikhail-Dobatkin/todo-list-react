{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TasksContainer from \"./components/tasks-container/tasks-container\";\nimport TaskApi from \"./components/TaskApi/TaskApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [task, setTask] = useState([]);\n  console.log('123', task);\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const response = await new TaskApi().getAllTasks();\n        setTask(response);\n      } catch (e) {\n        console.log('qwe', e);\n      }\n    };\n\n    fetchTask();\n  }, []); // async function getAllTasks(): Promise<ITask[] | void>  {\n  //   try {\n  //     const response = await httpQuery.get('/allTasks')\n  //     setTask(response.data.data)\n  //   } catch (e) {\n  //     console.log('I`M Error on GET query!', e)\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TasksContainer, {\n      tasks: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"I3GSAy+XdcJionI8zCBmPBZszgQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/App.tsx"],"names":["React","useEffect","useState","TasksContainer","TaskApi","App","task","setTask","console","log","fetchTask","response","getAllTasks","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAU,EAAV,CAAhC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,IAAnB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMS,SAAS,GAAG,YAAoC;AACpD,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAM,IAAIP,OAAJ,GAAcQ,WAAd,EAAvB;AACAL,QAAAA,OAAO,CAACI,QAAD,CAAP;AACD,OAHD,CAGE,OAAOE,CAAP,EAAU;AACVL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBI,CAAnB;AACD;AACF,KAPD;;AAQAH,IAAAA,SAAS;AACX,GAVQ,EAUN,EAVM,CAAT,CANgB,CAkBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;GAAMD,G;;KAAAA,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {ITask} from \"./components/interface/interface\";\nimport httpQuery from \"../src/components/httpQuery/httpQuery\";\nimport TasksContainer from \"./components/tasks-container/tasks-container\";\nimport TaskApi from \"./components/TaskApi/TaskApi\";\n\nconst App = () => {\n\n  const [task, setTask] = useState<ITask[]>([])\n\n  console.log('123', task);\n\n  useEffect(() => {\n     const fetchTask = async (): Promise<ITask[] | any> => {\n       try {\n         const response = await new TaskApi().getAllTasks()\n         setTask(response)\n       } catch (e) {\n         console.log('qwe', e)\n       }\n     }\n     fetchTask()\n  }, [])\n\n  // async function getAllTasks(): Promise<ITask[] | void>  {\n  //   try {\n  //     const response = await httpQuery.get('/allTasks')\n  //     setTask(response.data.data)\n  //   } catch (e) {\n  //     console.log('I`M Error on GET query!', e)\n  //   }\n  // }\n  return (\n    <div>\n      <TasksContainer tasks={task}/>\n    </div>\n\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}