{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container';\nimport { TodosComponent } from \"./todos-component\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodosContainer = _ref => {\n  _s();\n\n  let {\n    todos,\n    setTodos\n  } = _ref;\n  const [idChangeableTodo, setChangeableTodo] = useState('');\n\n  const EditTodo = (title, id) => {\n    setChangeableTodo(id);\n  };\n\n  const toggleIsCheck = async (body, id) => {\n    try {\n      const updatedTodo = await TodoService.updateTodo(body, id);\n      changeTodoHandler(updatedTodo, id);\n      console.log(updatedTodo, body);\n      console.log(todos);\n    } catch (e) {\n      console.log('Error in toggleIsCheck function', e);\n    }\n  };\n\n  const todoIsCheck = async (title, isCheck, id) => {\n    const body = {\n      id,\n      title,\n      isCheck: !isCheck\n    };\n    changeTodoHandler(body, id);\n    console.log(body);\n    console.log(todos);\n\n    try {\n      await toggleIsCheck(body, id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const changeTodoHandler = (changeTodo, id) => {\n    todos.map((todo, index) => {\n      if (id === todo._id) {\n        const prevArr = todos.splice(index, 1, changeTodo);\n        const arr = [...todos];\n        setTodos(arr);\n      } else {\n        console.log('Problem in function changeTodoHandler');\n      }\n    });\n  };\n\n  const changeCheck = body => {\n    console.log(body);\n  }; //todo move to todo container\n\n\n  const deleteTodo = async id => {\n    try {\n      const todo = await TodoService.deleteTodo(id);\n      const newArrTodos = todos.filter(task => {\n        return task._id !== todo._id;\n      });\n      setTodos(newArrTodos);\n    } catch (e) {\n      console.log('Error in function deleteTodo', e);\n    }\n  };\n\n  const TodoRemove = async id => {\n    try {\n      await deleteTodo(id);\n    } catch (e) {\n      console.log('Error in function deleteTodo', e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodosComponent, {\n      todos: todos,\n      TodoRemove: TodoRemove,\n      EditTodo: EditTodo,\n      todoIsCheck: todoIsCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupContainer, {\n      changeTodoHandler: changeTodoHandler,\n      idChangeableTodo: idChangeableTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosContainer, \"Sb3jOOZkpLj+pYacyAAIXrVH4EI=\");\n\n_c = TodosContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-container.tsx"],"names":["React","useState","TodoService","PopupContainer","TodosComponent","TodosContainer","todos","setTodos","idChangeableTodo","setChangeableTodo","EditTodo","title","id","toggleIsCheck","body","updatedTodo","updateTodo","changeTodoHandler","console","log","e","todoIsCheck","isCheck","changeTodo","map","todo","index","_id","prevArr","splice","arr","changeCheck","deleteTodo","newArrTodos","filter","task","TodoRemove"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { PopupContainer } from '../todo-edit-popup/popup-container';\nimport { TodosComponent } from \"./todos-component\";\nimport { ITask } from \"../../models/interface/interface\";\nimport './style.css';\n\ninterface TodosContainerProp {\n    fetchTodos: () => void\n    todos: ITask[]\n    // btnTodoRemove: (id: ITask[\"_id\"]) => void\n    // changeTodoHandler: (body: ITask, id: ITask[\"_id\"]) => void\n    // btnEditTodo: (id: ITask[\"_id\"]) => void\n    setTodos: (body: ITask[]) => void\n}\n\nexport const TodosContainer = ({todos, setTodos}: TodosContainerProp): JSX.Element => {\n\n    const [idChangeableTodo, setChangeableTodo] = useState<ITask[\"_id\"]>('')\n\n    const EditTodo = (title: ITask[\"title\"], id: ITask[\"_id\"]) => {\n        setChangeableTodo(id)\n    }\n\n    const toggleIsCheck = async (body: ITask, id: ITask[\"_id\"]): Promise<void> => {\n        try {\n            const updatedTodo = await TodoService.updateTodo(body, id)\n            changeTodoHandler(updatedTodo, id)\n            console.log(updatedTodo, body)\n            console.log(todos)\n        } catch (e) {\n            console.log('Error in toggleIsCheck function', e)\n        }\n    };\n\n    const todoIsCheck = async (title: ITask[\"title\"] ,isCheck: ITask[\"isCheck\"], id: ITask[\"_id\"]) => {\n        const body = {\n            id,\n            title,\n            isCheck: !isCheck\n        }\n        changeTodoHandler(body, id)\n        console.log(body)\n        console.log(todos)\n        try {\n             await toggleIsCheck(body, id)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const changeTodoHandler = (changeTodo: ITask, id: ITask[\"_id\"]) => {\n        todos.map((todo, index) => {\n            if(id === todo._id) {\n                const prevArr = todos.splice(index, 1, changeTodo)\n                const arr = [...todos]\n                setTodos(arr)\n            } else {\n                console.log('Problem in function changeTodoHandler')\n            }\n        })\n    }\n\n    const changeCheck = (body: ITask) => {\n        console.log(body)\n    }\n\n    //todo move to todo container\n    const deleteTodo = async (id: ITask[\"_id\"]): Promise<ITask | void> => {\n        try {\n            const todo: ITask = await TodoService.deleteTodo(id)\n            const newArrTodos = todos.filter(task => {\n                return task._id !== todo._id\n            })\n            setTodos(newArrTodos)\n        } catch (e) {\n            console.log('Error in function deleteTodo', e)\n        }\n    }\n    const TodoRemove = async (id: ITask[\"_id\"]) => {\n\n        try {\n            await deleteTodo(id)\n        } catch (e) {\n            console.log('Error in function deleteTodo', e)\n        }\n    }\n\n    return (\n        <>\n            <TodosComponent todos={todos} TodoRemove={TodoRemove} EditTodo={EditTodo} todoIsCheck={todoIsCheck} />\n            <PopupContainer changeTodoHandler={changeTodoHandler} idChangeableTodo={idChangeableTodo}/>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}