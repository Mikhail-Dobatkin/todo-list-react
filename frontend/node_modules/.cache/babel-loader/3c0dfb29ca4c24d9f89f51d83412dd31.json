{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-component.tsx\";\nimport React from 'react';\nimport Todo from '../todo/todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodosComponent = _ref => {\n  let {\n    todos,\n    deleteTodo,\n    toggleIsCheck\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        deleteTodo: deleteTodo,\n        toggleIsCheck: todo => toggleIsCheck(todo)\n      }, `${todo._id}_${todo.title}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 22\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = TodosComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosComponent\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todos-container/todos-component.tsx"],"names":["React","Todo","TodosComponent","todos","deleteTodo","toggleIsCheck","map","todo","_id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AASA,OAAO,MAAMC,cAAc,GAAG,QAA0E;AAAA,MAAzE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,GAAyE;AACtG,sBACM;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACKF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AACnB,0BAAO,QAAC,IAAD;AACQ,QAAA,IAAI,EAAEA,IADd;AAEQ,QAAA,UAAU,EAAEH,UAFpB;AAGQ,QAAA,aAAa,EAAGG,IAAD,IAAUF,aAAa,CAACE,IAAD;AAH9C,SAAY,GAAEA,IAAI,CAACC,GAAI,IAAGD,IAAI,CAACE,KAAM,EAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AAID,KALA;AADL;AAAA;AAAA;AAAA;AAAA,UADN;AAUD,CAXM;KAAMP,c","sourcesContent":["import React from 'react'\nimport Todo from '../todo/todo'\nimport { ITodo } from '../../models/interface/interface'\n\ninterface TodosComponentProp {\n    todos: ITodo[]\n    deleteTodo: (id: ITodo['_id']) => void\n    toggleIsCheck: (todo: ITodo) => void\n}\n\nexport const TodosComponent = ({ todos, deleteTodo, toggleIsCheck }:TodosComponentProp): JSX.Element => {\n  return (\n        <div className='task-container'>\n            {todos.map((todo) => {\n              return <Todo key={`${todo._id}_${todo.title}`}\n                             todo={todo}\n                             deleteTodo={deleteTodo}\n                             toggleIsCheck={(todo) => toggleIsCheck(todo)} />\n            })}\n        </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}