{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-edit-popup/popup-container.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { PopupComponent } from \"./popup-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PopupContainer = _ref => {\n  _s();\n\n  let {\n    changeTodoHandler\n  } = _ref;\n  const [editedTitle, setEditTitle] = useState(''); // const changeTodo = async (body: ITask, id: ITask[\"_id\"]): Promise<void> => {\n  //     try {\n  //         const updatedTodo: ITask = await TodoService.updateTodo(body, id)\n  //\n  //         console.log(updatedTodo)\n  //     } catch (e) {\n  //         console.log('Error in ChangeTodo function', e)\n  //     }\n  // };\n\n  const popupInputHandler = e => {\n    const value = e.target.value;\n    setEditTitle(value);\n  };\n\n  const popupBtnHandler = async (todo, id) => {// const body: any = {\n    //     id,\n    //     title: editTitle,\n    //     isCheck: false\n    // }\n    // console.log( body)\n    // try {\n    //     await changeTodo(body, id)\n    //     changeTodoHandler(body, id)\n    //\n    // } catch (e) {console.log('error on changeTodo function', e)}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PopupComponent, {\n      popupBtnHandler: popupBtnHandler,\n      popupInputHandler: popupInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PopupContainer, \"LBw53M0spyeijJR/SmUAlYKBoYI=\");\n\n_c = PopupContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupContainer\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-edit-popup/popup-container.tsx"],"names":["useState","PopupComponent","PopupContainer","changeTodoHandler","editedTitle","setEditTitle","popupInputHandler","e","value","target","popupBtnHandler","todo","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AASA,OAAO,MAAMC,cAAc,GAAG,QAA0D;AAAA;;AAAA,MAAzD;AAACC,IAAAA;AAAD,GAAyD;AAEpF,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BL,QAAQ,CAAC,EAAD,CAA5C,CAFoF,CAIpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMM,iBAAiB,GAAIC,CAAD,IAAY;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACAH,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAME,eAAe,GAAG,OAAOC,IAAP,EAAoBC,EAApB,KAAmC,CACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAZD;;AAcA,sBACI;AAAA,2BACA,QAAC,cAAD;AACI,MAAA,eAAe,EAAEF,eADrB;AAEI,MAAA,iBAAiB,EAAEJ;AAFvB;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAOH,CAxCM;;GAAMJ,c;;KAAAA,c","sourcesContent":["import { useState } from \"react\";\nimport { PopupComponent } from \"./popup-component\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { ITask } from \"../../models/interface/interface\";\n\ninterface PopupContainerProp {\n    changeTodoHandler: (changeTask: ITask, id: ITask[\"_id\"]) => void\n\n}\n\nexport const PopupContainer = ({changeTodoHandler}: PopupContainerProp): JSX.Element => {\n\n    const [editedTitle, setEditTitle] = useState('')\n\n    // const changeTodo = async (body: ITask, id: ITask[\"_id\"]): Promise<void> => {\n    //     try {\n    //         const updatedTodo: ITask = await TodoService.updateTodo(body, id)\n    //\n    //         console.log(updatedTodo)\n    //     } catch (e) {\n    //         console.log('Error in ChangeTodo function', e)\n    //     }\n    // };\n\n    const popupInputHandler = (e: any) => {\n        const value = e.target.value\n        setEditTitle(value)\n    }\n\n    const popupBtnHandler = async (todo: ITask, id: string) => {\n        // const body: any = {\n        //     id,\n        //     title: editTitle,\n        //     isCheck: false\n        // }\n        // console.log( body)\n        // try {\n        //     await changeTodo(body, id)\n        //     changeTodoHandler(body, id)\n        //\n        // } catch (e) {console.log('error on changeTodo function', e)}\n    }\n\n    return (\n        <>\n        <PopupComponent\n            popupBtnHandler={popupBtnHandler}\n            popupInputHandler={popupInputHandler} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}