{"ast":null,"code":"import { TodoActionTypes } from '../types/typesTodo';\nimport { useDispatch } from 'react-redux';\nexport const actionsService = () => {\n  var _s = $RefreshSig$();\n\n  const fetchTodos = () => {\n    return {\n      type: TodoActionTypes.FETCH_TODOS_SUCCESS\n    };\n  };\n\n  const createTodo = todo => {\n    _s();\n\n    const dispatch = useDispatch();\n    return dispatch({\n      type: TodoActionTypes.CREATE_TODO_SUCCESS,\n      payload: todo\n    });\n  };\n\n  _s(createTodo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n    return [useDispatch];\n  });\n\n  const deleteTask = todo => {\n    return {\n      type: TodoActionTypes.DELETE_TODO_SUCCESS,\n      payload: todo\n    };\n  };\n\n  const changeTodo = todo => {\n    return {\n      type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS,\n      payload: todo\n    };\n  };\n};","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/store/action-creators/action.ts"],"names":["TodoActionTypes","useDispatch","actionsService","fetchTodos","type","FETCH_TODOS_SUCCESS","createTodo","todo","dispatch","CREATE_TODO_SUCCESS","payload","deleteTask","DELETE_TODO_SUCCESS","changeTodo","CHANGE_TODO_STATE_SUCCESS"],"mappings":"AAAA,SAAqBA,eAArB,QAA4C,oBAA5C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAQ;AAAEC,MAAAA,IAAI,EAAEJ,eAAe,CAACK;AAAxB,KAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIC,IAAD,IAAiB;AAAA;;AAClC,UAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,WAAOO,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEJ,eAAe,CAACS,mBAAxB;AAA6CC,MAAAA,OAAO,EAAEH;AAAtD,KAAD,CAAf;AACD,GAHD;;AALkC,KAK5BD,UAL4B;AAAA,YAMfL,WANe;AAAA;;AASlC,QAAMU,UAAU,GAAIJ,IAAD,IAAwB;AACzC,WAAQ;AAAEH,MAAAA,IAAI,EAAEJ,eAAe,CAACY,mBAAxB;AAA6CF,MAAAA,OAAO,EAAEH;AAAtD,KAAR;AACD,GAFD;;AAGA,QAAMM,UAAU,GAAIN,IAAD,IAAiB;AAClC,WAAQ;AAAEH,MAAAA,IAAI,EAAEJ,eAAe,CAACc,yBAAxB;AAAmDJ,MAAAA,OAAO,EAAEH;AAA5D,KAAR;AACD,GAFD;AAGD,CAfM","sourcesContent":["import { TodoAction, TodoActionTypes } from '../types/typesTodo'\nimport { ITodo } from '../../models/interface/interface'\nimport { useDispatch } from 'react-redux'\n\nexport const actionsService = () => {\n  const fetchTodos = () => {\n    return ({ type: TodoActionTypes.FETCH_TODOS_SUCCESS })\n  }\n\n  const createTodo = (todo: ITodo) => {\n    const dispatch = useDispatch()\n    return dispatch({ type: TodoActionTypes.CREATE_TODO_SUCCESS, payload: todo })\n  }\n  const deleteTask = (todo: ITodo['_id']) => {\n    return ({ type: TodoActionTypes.DELETE_TODO_SUCCESS, payload: todo })\n  }\n  const changeTodo = (todo: ITodo) => {\n    return ({ type: TodoActionTypes.CHANGE_TODO_STATE_SUCCESS, payload: todo })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}