{"ast":null,"code":"var _jsxFileName = \"/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-form/todo-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { TodoFormComponent } from \"./todo-form-component\";\nimport './style.css'; //todo name of interface\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = _ref => {\n  _s();\n\n  let {\n    newTaskHandler\n  } = _ref;\n  const [input, setInput] = useState('');\n\n  const createTask = async body => {\n    try {\n      const task = await new TodoService().createNewTodo(body);\n      console.log(task); //todo call handler here\n\n      newTaskHandler(task);\n    } catch (e) {\n      console.log('Error in function createTask', e);\n    }\n  };\n\n  const inputPopup = e => {\n    const value = e.target.value;\n    setInput(value);\n  };\n\n  const btnTodoSubmit = async e => {\n    e.preventDefault();\n\n    if (input === '') {\n      return;\n    }\n\n    const body = {\n      title: input,\n      isCheck: false\n    };\n\n    try {\n      await createTask(body);\n    } catch (e) {\n      console.log('Error in function createTask');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoFormComponent, {\n    inputPopup: inputPopup,\n    btnTodoSubmit: btnTodoSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TodoForm, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/user/WebstormProjects/todo-list-react/frontend/src/containers/todo-form/todo-form.tsx"],"names":["React","useState","TodoService","TodoFormComponent","TodoForm","newTaskHandler","input","setInput","createTask","body","task","createNewTodo","console","log","e","inputPopup","value","target","btnTodoSubmit","preventDefault","title","isCheck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAO,aAAP,C,CAEA;;;AAKA,OAAO,MAAMC,QAAQ,GAAG,QAAqC;AAAA;;AAAA,MAApC;AAAEC,IAAAA;AAAF,GAAoC;AAEzD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,UAAU,GAAG,MAAOC,IAAP,IAAuB;AACtC,QAAI;AACA,YAAMC,IAAW,GAAG,MAAM,IAAIR,WAAJ,GAAkBS,aAAlB,CAAgCF,IAAhC,CAA1B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAFA,CAGA;;AACAL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACH,KALD,CAKE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CC,CAA5C;AACH;AACJ,GATD;;AAWA,QAAMC,UAAU,GAAID,CAAD,IAA4C;AAC3D,UAAME,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AACAT,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACH,GAHD;;AAKA,QAAME,aAAa,GAAG,MAAOJ,CAAP,IAAkD;AACpEA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAGb,KAAK,KAAK,EAAb,EAAiB;AACb;AACH;;AACD,UAAMG,IAAW,GAAG;AAChBW,MAAAA,KAAK,EAAEd,KADS;AAEhBe,MAAAA,OAAO,EAAE;AAFO,KAApB;;AAIA,QAAI;AACA,YAAMb,UAAU,CAACC,IAAD,CAAhB;AACH,KAFD,CAEE,OAAOK,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ,GAdD;;AAgBA,sBACK,QAAC,iBAAD;AACI,IAAA,UAAU,EAAEE,UADhB;AAEG,IAAA,aAAa,EAAEG;AAFlB;AAAA;AAAA;AAAA;AAAA,UADL;AAMH,CA1CM;;GAAMd,Q;;KAAAA,Q;AA4Cb,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {ITask} from \"../../models/interface/interface\";\nimport TodoService from \"../../service/todoService/TodoService\";\nimport { TodoFormComponent } from \"./todo-form-component\";\nimport './style.css'\n\n//todo name of interface\ninterface TaskAddProp {\n    newTaskHandler: (task: ITask) => void\n}\n\nexport const TodoForm = ({ newTaskHandler }: TaskAddProp) => {\n\n    const [input, setInput] = useState('')\n\n    const createTask = async (body: ITask) => {\n        try {\n            const task: ITask = await new TodoService().createNewTodo(body)\n            console.log(task)\n            //todo call handler here\n            newTaskHandler(task)\n        } catch (e) {\n            console.log('Error in function createTask', e)\n        }\n    }\n\n    const inputPopup = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value\n        setInput(value)\n    }\n\n    const btnTodoSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault()\n        if(input === '') {\n            return\n        }\n        const body: ITask = {\n            title: input,\n            isCheck: false\n        }\n        try {\n            await createTask(body)\n        } catch (e) {\n            console.log('Error in function createTask')\n        }\n    }\n\n    return (\n         <TodoFormComponent\n             inputPopup={inputPopup}\n            btnTodoSubmit={btnTodoSubmit}\n         />\n    )\n}\n\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}